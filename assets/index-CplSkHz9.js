(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))n(r);new MutationObserver(r=>{for(const s of r)if(s.type==="childList")for(const a of s.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&n(a)}).observe(document,{childList:!0,subtree:!0});function i(r){const s={};return r.integrity&&(s.integrity=r.integrity),r.referrerPolicy&&(s.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?s.credentials="include":r.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function n(r){if(r.ep)return;r.ep=!0;const s=i(r);fetch(r.href,s)}})();/**
 * @license
 * Copyright 2017 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */const A0=globalThis,F0=A0.trustedTypes,ut=F0?F0.createPolicy("lit-html",{createHTML:e=>e}):void 0,Gt="$lit$",l0=`lit$${Math.random().toFixed(9).slice(2)}$`,Xt="?"+l0,ge=`<${Xt}>`,g0=document,S0=()=>g0.createComment(""),E0=e=>e===null||typeof e!="object"&&typeof e!="function",jt=Array.isArray,pe=e=>jt(e)||typeof(e==null?void 0:e[Symbol.iterator])=="function",j0=`[ 	
\f\r]`,x0=/<(?:(!--|\/[^a-zA-Z])|(\/?[a-zA-Z][^>\s]*)|(\/?$))/g,gt=/-->/g,pt=/>/g,o0=RegExp(`>|${j0}(?:([^\\s"'>=/]+)(${j0}*=${j0}*(?:[^ 	
\f\r"'\`<>=]|("|')|))|$)`,"g"),mt=/'/g,yt=/"/g,Zt=/^(?:script|style|textarea|title)$/i,me=e=>(t,...i)=>({_$litType$:e,strings:t,values:i}),d0=me(1),_0=Symbol.for("lit-noChange"),k=Symbol.for("lit-nothing"),vt=new WeakMap,f0=g0.createTreeWalker(g0,129);function Qt(e,t){if(!Array.isArray(e)||!e.hasOwnProperty("raw"))throw Error("invalid template strings array");return ut!==void 0?ut.createHTML(t):t}const ye=(e,t)=>{const i=e.length-1,n=[];let r,s=t===2?"<svg>":"",a=x0;for(let h=0;h<i;h++){const l=e[h];let c,o,d=-1,u=0;for(;u<l.length&&(a.lastIndex=u,o=a.exec(l),o!==null);)u=a.lastIndex,a===x0?o[1]==="!--"?a=gt:o[1]!==void 0?a=pt:o[2]!==void 0?(Zt.test(o[2])&&(r=RegExp("</"+o[2],"g")),a=o0):o[3]!==void 0&&(a=o0):a===o0?o[0]===">"?(a=r??x0,d=-1):o[1]===void 0?d=-2:(d=a.lastIndex-o[2].length,c=o[1],a=o[3]===void 0?o0:o[3]==='"'?yt:mt):a===yt||a===mt?a=o0:a===gt||a===pt?a=x0:(a=o0,r=void 0);const f=a===o0&&e[h+1].startsWith("/>")?" ":"";s+=a===x0?l+ge:d>=0?(n.push(c),l.slice(0,d)+Gt+l.slice(d)+l0+f):l+l0+(d===-2?h:f)}return[Qt(e,s+(e[i]||"<?>")+(t===2?"</svg>":"")),n]};class $0{constructor({strings:t,_$litType$:i},n){let r;this.parts=[];let s=0,a=0;const h=t.length-1,l=this.parts,[c,o]=ye(t,i);if(this.el=$0.createElement(c,n),f0.currentNode=this.el.content,i===2){const d=this.el.content.firstChild;d.replaceWith(...d.childNodes)}for(;(r=f0.nextNode())!==null&&l.length<h;){if(r.nodeType===1){if(r.hasAttributes())for(const d of r.getAttributeNames())if(d.endsWith(Gt)){const u=o[a++],f=r.getAttribute(d).split(l0),g=/([.?@])?(.*)/.exec(u);l.push({type:1,index:s,name:g[2],strings:f,ctor:g[1]==="."?we:g[1]==="?"?xe:g[1]==="@"?Me:k0}),r.removeAttribute(d)}else d.startsWith(l0)&&(l.push({type:6,index:s}),r.removeAttribute(d));if(Zt.test(r.tagName)){const d=r.textContent.split(l0),u=d.length-1;if(u>0){r.textContent=F0?F0.emptyScript:"";for(let f=0;f<u;f++)r.append(d[f],S0()),f0.nextNode(),l.push({type:2,index:++s});r.append(d[u],S0())}}}else if(r.nodeType===8)if(r.data===Xt)l.push({type:2,index:s});else{let d=-1;for(;(d=r.data.indexOf(l0,d+1))!==-1;)l.push({type:7,index:s}),d+=l0.length-1}s++}}static createElement(t,i){const n=g0.createElement("template");return n.innerHTML=t,n}}function m0(e,t,i=e,n){var a,h;if(t===_0)return t;let r=n!==void 0?(a=i._$Co)==null?void 0:a[n]:i._$Cl;const s=E0(t)?void 0:t._$litDirective$;return(r==null?void 0:r.constructor)!==s&&((h=r==null?void 0:r._$AO)==null||h.call(r,!1),s===void 0?r=void 0:(r=new s(e),r._$AT(e,i,n)),n!==void 0?(i._$Co??(i._$Co=[]))[n]=r:i._$Cl=r),r!==void 0&&(t=m0(e,r._$AS(e,t.values),r,n)),t}class ve{constructor(t,i){this._$AV=[],this._$AN=void 0,this._$AD=t,this._$AM=i}get parentNode(){return this._$AM.parentNode}get _$AU(){return this._$AM._$AU}u(t){const{el:{content:i},parts:n}=this._$AD,r=((t==null?void 0:t.creationScope)??g0).importNode(i,!0);f0.currentNode=r;let s=f0.nextNode(),a=0,h=0,l=n[0];for(;l!==void 0;){if(a===l.index){let c;l.type===2?c=new z0(s,s.nextSibling,this,t):l.type===1?c=new l.ctor(s,l.name,l.strings,this,t):l.type===6&&(c=new Ae(s,this,t)),this._$AV.push(c),l=n[++h]}a!==(l==null?void 0:l.index)&&(s=f0.nextNode(),a++)}return f0.currentNode=g0,r}p(t){let i=0;for(const n of this._$AV)n!==void 0&&(n.strings!==void 0?(n._$AI(t,n,i),i+=n.strings.length-2):n._$AI(t[i])),i++}}class z0{get _$AU(){var t;return((t=this._$AM)==null?void 0:t._$AU)??this._$Cv}constructor(t,i,n,r){this.type=2,this._$AH=k,this._$AN=void 0,this._$AA=t,this._$AB=i,this._$AM=n,this.options=r,this._$Cv=(r==null?void 0:r.isConnected)??!0}get parentNode(){let t=this._$AA.parentNode;const i=this._$AM;return i!==void 0&&(t==null?void 0:t.nodeType)===11&&(t=i.parentNode),t}get startNode(){return this._$AA}get endNode(){return this._$AB}_$AI(t,i=this){t=m0(this,t,i),E0(t)?t===k||t==null||t===""?(this._$AH!==k&&this._$AR(),this._$AH=k):t!==this._$AH&&t!==_0&&this._(t):t._$litType$!==void 0?this.$(t):t.nodeType!==void 0?this.T(t):pe(t)?this.k(t):this._(t)}S(t){return this._$AA.parentNode.insertBefore(t,this._$AB)}T(t){this._$AH!==t&&(this._$AR(),this._$AH=this.S(t))}_(t){this._$AH!==k&&E0(this._$AH)?this._$AA.nextSibling.data=t:this.T(g0.createTextNode(t)),this._$AH=t}$(t){var s;const{values:i,_$litType$:n}=t,r=typeof n=="number"?this._$AC(t):(n.el===void 0&&(n.el=$0.createElement(Qt(n.h,n.h[0]),this.options)),n);if(((s=this._$AH)==null?void 0:s._$AD)===r)this._$AH.p(i);else{const a=new ve(r,this),h=a.u(this.options);a.p(i),this.T(h),this._$AH=a}}_$AC(t){let i=vt.get(t.strings);return i===void 0&&vt.set(t.strings,i=new $0(t)),i}k(t){jt(this._$AH)||(this._$AH=[],this._$AR());const i=this._$AH;let n,r=0;for(const s of t)r===i.length?i.push(n=new z0(this.S(S0()),this.S(S0()),this,this.options)):n=i[r],n._$AI(s),r++;r<i.length&&(this._$AR(n&&n._$AB.nextSibling,r),i.length=r)}_$AR(t=this._$AA.nextSibling,i){var n;for((n=this._$AP)==null?void 0:n.call(this,!1,!0,i);t&&t!==this._$AB;){const r=t.nextSibling;t.remove(),t=r}}setConnected(t){var i;this._$AM===void 0&&(this._$Cv=t,(i=this._$AP)==null||i.call(this,t))}}class k0{get tagName(){return this.element.tagName}get _$AU(){return this._$AM._$AU}constructor(t,i,n,r,s){this.type=1,this._$AH=k,this._$AN=void 0,this.element=t,this.name=i,this._$AM=r,this.options=s,n.length>2||n[0]!==""||n[1]!==""?(this._$AH=Array(n.length-1).fill(new String),this.strings=n):this._$AH=k}_$AI(t,i=this,n,r){const s=this.strings;let a=!1;if(s===void 0)t=m0(this,t,i,0),a=!E0(t)||t!==this._$AH&&t!==_0,a&&(this._$AH=t);else{const h=t;let l,c;for(t=s[0],l=0;l<s.length-1;l++)c=m0(this,h[n+l],i,l),c===_0&&(c=this._$AH[l]),a||(a=!E0(c)||c!==this._$AH[l]),c===k?t=k:t!==k&&(t+=(c??"")+s[l+1]),this._$AH[l]=c}a&&!r&&this.j(t)}j(t){t===k?this.element.removeAttribute(this.name):this.element.setAttribute(this.name,t??"")}}class we extends k0{constructor(){super(...arguments),this.type=3}j(t){this.element[this.name]=t===k?void 0:t}}class xe extends k0{constructor(){super(...arguments),this.type=4}j(t){this.element.toggleAttribute(this.name,!!t&&t!==k)}}class Me extends k0{constructor(t,i,n,r,s){super(t,i,n,r,s),this.type=5}_$AI(t,i=this){if((t=m0(this,t,i,0)??k)===_0)return;const n=this._$AH,r=t===k&&n!==k||t.capture!==n.capture||t.once!==n.once||t.passive!==n.passive,s=t!==k&&(n===k||r);r&&this.element.removeEventListener(this.name,this,n),s&&this.element.addEventListener(this.name,this,t),this._$AH=t}handleEvent(t){var i;typeof this._$AH=="function"?this._$AH.call(((i=this.options)==null?void 0:i.host)??this.element,t):this._$AH.handleEvent(t)}}class Ae{constructor(t,i,n){this.element=t,this.type=6,this._$AN=void 0,this._$AM=i,this.options=n}get _$AU(){return this._$AM._$AU}_$AI(t){m0(this,t)}}const Z0=A0.litHtmlPolyfillSupport;Z0==null||Z0($0,z0),(A0.litHtmlVersions??(A0.litHtmlVersions=[])).push("3.1.4");const be=(e,t,i)=>{const n=t;let r=n._$litPart$;return r===void 0&&(n._$litPart$=r=new z0(t.insertBefore(S0(),null),null,void 0,{})),r._$AI(e),r};var Z=typeof window<"u"?window:null,ot=Z===null,C0=ot?void 0:Z.document,K="addEventListener",J="removeEventListener",Q0="getBoundingClientRect",M0="_a",t0="_b",r0="_c",P0="horizontal",e0=function(){return!1},Se=ot?"calc":["","-webkit-","-moz-","-o-"].filter(function(e){var t=C0.createElement("div");return t.style.cssText="width:"+e+"calc(9px)",!!t.style.length}).shift()+"calc",Kt=function(e){return typeof e=="string"||e instanceof String},wt=function(e){if(Kt(e)){var t=C0.querySelector(e);if(!t)throw new Error("Selector "+e+" did not match a DOM element");return t}return e},W=function(e,t,i){var n=e[t];return n!==void 0?n:i},B0=function(e,t,i,n){if(t){if(n==="end")return 0;if(n==="center")return e/2}else if(i){if(n==="start")return 0;if(n==="center")return e/2}return e},Ee=function(e,t){var i=C0.createElement("div");return i.className="gutter gutter-"+t,i},_e=function(e,t,i){var n={};return Kt(t)?n[e]=t:n[e]=Se+"("+t+"% - "+i+"px)",n},$e=function(e,t){var i;return i={},i[e]=t+"px",i},Ce=function(e,t){if(t===void 0&&(t={}),ot)return{};var i=e,n,r,s,a,h,l;Array.from&&(i=Array.from(i));var c=wt(i[0]),o=c.parentNode,d=getComputedStyle?getComputedStyle(o):null,u=d?d.flexDirection:null,f=W(t,"sizes")||i.map(function(){return 100/i.length}),g=W(t,"minSize",100),p=Array.isArray(g)?g:i.map(function(){return g}),m=W(t,"maxSize",1/0),w=Array.isArray(m)?m:i.map(function(){return m}),C=W(t,"expandToMin",!1),A=W(t,"gutterSize",10),_=W(t,"gutterAlign","center"),E=W(t,"snapOffset",30),b=Array.isArray(E)?E:i.map(function(){return E}),U=W(t,"dragInterval",1),O=W(t,"direction",P0),T=W(t,"cursor",O===P0?"col-resize":"row-resize"),B=W(t,"gutter",Ee),N=W(t,"elementStyle",_e),P=W(t,"gutterStyle",$e);O===P0?(n="width",r="clientX",s="left",a="right",h="clientWidth"):O==="vertical"&&(n="height",r="clientY",s="top",a="bottom",h="clientHeight");function L(S,y,M,$){var D=N(n,y,M,$);Object.keys(D).forEach(function(F){S.style[F]=D[F]})}function z(S,y,M){var $=P(n,y,M);Object.keys($).forEach(function(D){S.style[D]=$[D]})}function G(){return l.map(function(S){return S.size})}function U0(S){return"touches"in S?S.touches[0][r]:S[r]}function T0(S){var y=l[this.a],M=l[this.b],$=y.size+M.size;y.size=S/this.size*$,M.size=$-S/this.size*$,L(y.element,y.size,this[t0],y.i),L(M.element,M.size,this[r0],M.i)}function h0(S){var y,M=l[this.a],$=l[this.b];this.dragging&&(y=U0(S)-this.start+(this[t0]-this.dragOffset),U>1&&(y=Math.round(y/U)*U),y<=M.minSize+M.snapOffset+this[t0]?y=M.minSize+this[t0]:y>=this.size-($.minSize+$.snapOffset+this[r0])&&(y=this.size-($.minSize+this[r0])),y>=M.maxSize-M.snapOffset+this[t0]?y=M.maxSize+this[t0]:y<=this.size-($.maxSize-$.snapOffset+this[r0])&&(y=this.size-($.maxSize+this[r0])),T0.call(this,y),W(t,"onDrag",e0)(G()))}function L0(){var S=l[this.a].element,y=l[this.b].element,M=S[Q0](),$=y[Q0]();this.size=M[n]+$[n]+this[t0]+this[r0],this.start=M[s],this.end=M[a]}function I0(S){if(!getComputedStyle)return null;var y=getComputedStyle(S);if(!y)return null;var M=S[h];return M===0?null:(O===P0?M-=parseFloat(y.paddingLeft)+parseFloat(y.paddingRight):M-=parseFloat(y.paddingTop)+parseFloat(y.paddingBottom),M)}function R0(S){var y=I0(o);if(y===null||p.reduce(function(F,v){return F+v},0)>y)return S;var M=0,$=[],D=S.map(function(F,v){var I=y*F/100,q=B0(A,v===0,v===S.length-1,_),X=p[v]+q;return I<X?(M+=X-I,$.push(0),X):($.push(I-X),I)});return M===0?S:D.map(function(F,v){var I=F;if(M>0&&$[v]-M>0){var q=Math.min(M,$[v]-M);M-=q,I=F-q}return I/y*100})}function O0(){var S=this,y=l[S.a].element,M=l[S.b].element;S.dragging&&W(t,"onDragEnd",e0)(G()),S.dragging=!1,Z[J]("mouseup",S.stop),Z[J]("touchend",S.stop),Z[J]("touchcancel",S.stop),Z[J]("mousemove",S.move),Z[J]("touchmove",S.move),S.stop=null,S.move=null,y[J]("selectstart",e0),y[J]("dragstart",e0),M[J]("selectstart",e0),M[J]("dragstart",e0),y.style.userSelect="",y.style.webkitUserSelect="",y.style.MozUserSelect="",y.style.pointerEvents="",M.style.userSelect="",M.style.webkitUserSelect="",M.style.MozUserSelect="",M.style.pointerEvents="",S.gutter.style.cursor="",S.parent.style.cursor="",C0.body.style.cursor=""}function X0(S){if(!("button"in S&&S.button!==0)){var y=this,M=l[y.a].element,$=l[y.b].element;y.dragging||W(t,"onDragStart",e0)(G()),S.preventDefault(),y.dragging=!0,y.move=h0.bind(y),y.stop=O0.bind(y),Z[K]("mouseup",y.stop),Z[K]("touchend",y.stop),Z[K]("touchcancel",y.stop),Z[K]("mousemove",y.move),Z[K]("touchmove",y.move),M[K]("selectstart",e0),M[K]("dragstart",e0),$[K]("selectstart",e0),$[K]("dragstart",e0),M.style.userSelect="none",M.style.webkitUserSelect="none",M.style.MozUserSelect="none",M.style.pointerEvents="none",$.style.userSelect="none",$.style.webkitUserSelect="none",$.style.MozUserSelect="none",$.style.pointerEvents="none",y.gutter.style.cursor=T,y.parent.style.cursor=T,C0.body.style.cursor=T,L0.call(y),y.dragOffset=U0(S)-y.end}}f=R0(f);var n0=[];l=i.map(function(S,y){var M={element:wt(S),size:f[y],minSize:p[y],maxSize:w[y],snapOffset:b[y],i:y},$;if(y>0&&($={a:y-1,b:y,dragging:!1,direction:O,parent:o},$[t0]=B0(A,y-1===0,!1,_),$[r0]=B0(A,!1,y===i.length-1,_),u==="row-reverse"||u==="column-reverse")){var D=$.a;$.a=$.b,$.b=D}if(y>0){var F=B(y,O,M.element);z(F,A,y),$[M0]=X0.bind($),F[K]("mousedown",$[M0]),F[K]("touchstart",$[M0]),o.insertBefore(F,M.element),$.gutter=F}return L(M.element,M.size,B0(A,y===0,y===i.length-1,_),y),y>0&&n0.push($),M});function y0(S){var y=S.i===n0.length,M=y?n0[S.i-1]:n0[S.i];L0.call(M);var $=y?M.size-S.minSize-M[r0]:S.minSize+M[t0];T0.call(M,$)}l.forEach(function(S){var y=S.element[Q0]()[n];y<S.minSize&&(C?y0(S):S.minSize=y)});function v0(S){var y=R0(S);y.forEach(function(M,$){if($>0){var D=n0[$-1],F=l[D.a],v=l[D.b];F.size=y[$-1],v.size=M,L(F.element,F.size,D[t0],F.i),L(v.element,v.size,D[r0],v.i)}})}function w0(S,y){n0.forEach(function(M){if(y!==!0?M.parent.removeChild(M.gutter):(M.gutter[J]("mousedown",M[M0]),M.gutter[J]("touchstart",M[M0])),S!==!0){var $=N(n,M.a.size,M[t0]);Object.keys($).forEach(function(D){l[M.a].element.style[D]="",l[M.b].element.style[D]=""})}})}return{setSizes:v0,getSizes:G,collapse:function(y){y0(l[y])},destroy:w0,parent:o,pairs:n0}};const ze=1e3,Jt=["warpColorSequence","weftColorSequence","threading","treadling","tieUp"];let x={cellSize:20,activeYarn:0,yarnPalette:["#d31b1b","#3374a9","#d69d21","#56c246"],refreshSim:!1,editingPalette:!1,stopSim:null,draft:{warpColorSequence:[0,0,0,0,0,0,1,1,1,1,1,1],weftColorSequence:[2,2,3,3],threading:[[0,0,0,1,0,0,0,1,0,0,0,1],[0,0,1,0,0,0,1,0,0,0,1,0],[0,1,0,0,0,1,0,0,0,1,0,0],[1,0,0,0,1,0,0,0,1,0,0,0]],tieUp:[[0,0,0,1],[0,1,0,0],[0,0,1,0],[1,0,0,0]],treadling:[[0,0,0,1],[0,0,1,0],[0,1,0,0],[1,0,0,0]],drawdown:[],snapshots:[],lastSnapshot:0,heldKeys:new Set}};function Ue(e){if(!(x.lastSnapshot<Date.now()-ze))return!1;for(const t of Jt)if(t in e)return!0;return!1}function Te(e){return x={...x,...e,snapshots:[Object.fromEntries(Jt.map(t=>[t,x[t]])),...x.snapshots],lastSnapshot:Date.now()},x}function Le(e){return x={...x,...e},x}function Ie(e){return Ue(e)?Te(e):Le(e)}function te(e){const t=Object.keys(e);Re.syncState(Ie(e),t)}const Re=(()=>{const e=[];function t(n,r){e.forEach(s=>{s.syncState(n,r)})}function i(n){n.forEach(r=>e.push(r({state:x,dispatch:te})))}return{register:i,syncState:t}})();function Oe(e,t){const i=e.warpColorSequence[t%e.warpColorSequence.length];return x.yarnPalette[i]}function Pe(e,t){const i=e.weftColorSequence[t%e.weftColorSequence.length];return x.yarnPalette[i]}function W0(e,t,i,n){e.strokeStyle="black",e.lineWidth=1,e.beginPath();for(let r=0;r<n;r++){const s=r*t-.5;e.moveTo(0,s),e.lineTo(i*t,s)}for(let r=0;r<i;r++){const s=r*t-.5;e.moveTo(s,0),e.lineTo(s,n*t)}e.moveTo(.1,0),e.lineTo(.1,n*t),e.stroke()}function ct(e,t,i){const n=e.getContext("2d"),r=t.length,s=t[0].length;e.height=r*i,e.width=s*i;for(let a=0;a<r;a++)for(let h=0;h<s;h++)t[a][h]===0?n.fillStyle="white":n.fillStyle="black",n.fillRect(h*i,a*i,i,i);W0(n,i,s,r)}function Be(e,t,i){const n=e.getContext("2d"),r=t.warpColorSequence.length;e.height=i,e.width=r*i;for(let s=0;s<r;s++)n.fillStyle=Oe(t,s),n.fillRect(s*i,0,i,i);W0(n,i,r,1)}function Ne(e,t,i){const n=e.getContext("2d"),r=t.weftColorSequence.length;e.height=r*i,e.width=i;for(let s=0;s<r;s++)n.fillStyle=Pe(t,s),n.fillRect(0,s*i,i,i);W0(n,i,1,r)}function Fe(e,t){return e.warpColorSequence[t%e.warpColorSequence.length]}function De(e,t){return e.weftColorSequence[t%e.weftColorSequence.length]}function ee(e,t,i){const n=e.getContext("2d"),r=t.threading[0].length,s=t.treadling.length;e.height=i*s,e.width=i*r;for(let w=0;w<s;w++)for(let C=0;C<r;C++){let A=t.drawdown[w][C]===0?Fe(t,C):De(t,w);n.fillStyle=x.yarnPalette[A],n.fillRect(C*i,w*i,i,i)}const a=document.getElementById("drawdown-repeat"),h=a.getContext("2d"),l=document.getElementById("drawdown-container"),c=document.getElementById("drawdown"),o=h.createPattern(c,"repeat"),d=[e.width,e.height],u=Math.ceil(l.offsetWidth/d[0])*d[0],f=Math.ceil(l.offsetHeight/d[1])*d[1];a.width=u,a.height=f,h.rect(0,0,u,f),h.fillStyle=o,h.fill();const g=document.getElementById("drawdown-repeat-container"),p=[Math.max(d[0],(Math.floor(l.offsetWidth/i)-1)*i),Math.max(d[1],(Math.floor(l.offsetHeight/i)-1)*i)];g.style.width=p[0]+"px",g.style.height=p[1]+"px";const m=document.getElementById("drawdown-overlay");m.width=e.width,m.height=e.height,m.style.right=p[0]===d[0]?"auto":0,g.style.right=p[0]===d[0]?"auto":0,a.style.right=p[0]===d[0]?"auto":0,dt()}function dt(){const e=document.getElementById("drawdown-overlay"),t=e.getContext("2d");t.clearRect(0,0,e.width,e.height),W0(t,x.cellSize,e.width,e.height)}function Y0(){const{cellSize:e,draft:t}=x,i=document.getElementById("threading");ct(i,t.threading,e)}function H0(){const{cellSize:e,draft:t}=x,i=document.getElementById("treadling");ct(i,t.treadling,e)}function G0(){const{cellSize:e,draft:t}=x,i=document.getElementById("tie-up");ct(i,t.tieUp,e)}function H(){const{cellSize:e,draft:t}=x;Y0(),H0(),G0();const i=document.getElementById("warp-color"),n=document.getElementById("weft-color");Be(i,t,e),Ne(n,t,e);const r=document.getElementById("drawdown");ee(r,t,e)}function b0(e){let t=e[0],i=e[1],n=e[2];return Math.sqrt(t*t+i*i+n*n)}function rt(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e}function qe(e,t,i,n){return e[0]=t,e[1]=i,e[2]=n,e}function xt(e,t,i){return e[0]=t[0]+i[0],e[1]=t[1]+i[1],e[2]=t[2]+i[2],e}function Mt(e,t,i){return e[0]=t[0]-i[0],e[1]=t[1]-i[1],e[2]=t[2]-i[2],e}function Ve(e,t,i){return e[0]=t[0]*i[0],e[1]=t[1]*i[1],e[2]=t[2]*i[2],e}function ke(e,t,i){return e[0]=t[0]/i[0],e[1]=t[1]/i[1],e[2]=t[2]/i[2],e}function K0(e,t,i){return e[0]=t[0]*i,e[1]=t[1]*i,e[2]=t[2]*i,e}function We(e,t){let i=t[0]-e[0],n=t[1]-e[1],r=t[2]-e[2];return Math.sqrt(i*i+n*n+r*r)}function Ye(e,t){let i=t[0]-e[0],n=t[1]-e[1],r=t[2]-e[2];return i*i+n*n+r*r}function At(e){let t=e[0],i=e[1],n=e[2];return t*t+i*i+n*n}function He(e,t){return e[0]=-t[0],e[1]=-t[1],e[2]=-t[2],e}function Ge(e,t){return e[0]=1/t[0],e[1]=1/t[1],e[2]=1/t[2],e}function st(e,t){let i=t[0],n=t[1],r=t[2],s=i*i+n*n+r*r;return s>0&&(s=1/Math.sqrt(s)),e[0]=t[0]*s,e[1]=t[1]*s,e[2]=t[2]*s,e}function ie(e,t){return e[0]*t[0]+e[1]*t[1]+e[2]*t[2]}function bt(e,t,i){let n=t[0],r=t[1],s=t[2],a=i[0],h=i[1],l=i[2];return e[0]=r*l-s*h,e[1]=s*a-n*l,e[2]=n*h-r*a,e}function Xe(e,t,i,n){let r=t[0],s=t[1],a=t[2];return e[0]=r+n*(i[0]-r),e[1]=s+n*(i[1]-s),e[2]=a+n*(i[2]-a),e}function je(e,t,i){let n=t[0],r=t[1],s=t[2],a=i[3]*n+i[7]*r+i[11]*s+i[15];return a=a||1,e[0]=(i[0]*n+i[4]*r+i[8]*s+i[12])/a,e[1]=(i[1]*n+i[5]*r+i[9]*s+i[13])/a,e[2]=(i[2]*n+i[6]*r+i[10]*s+i[14])/a,e}function Ze(e,t,i){let n=t[0],r=t[1],s=t[2],a=i[3]*n+i[7]*r+i[11]*s+i[15];return a=a||1,e[0]=(i[0]*n+i[4]*r+i[8]*s)/a,e[1]=(i[1]*n+i[5]*r+i[9]*s)/a,e[2]=(i[2]*n+i[6]*r+i[10]*s)/a,e}function Qe(e,t,i){let n=t[0],r=t[1],s=t[2];return e[0]=n*i[0]+r*i[3]+s*i[6],e[1]=n*i[1]+r*i[4]+s*i[7],e[2]=n*i[2]+r*i[5]+s*i[8],e}function Ke(e,t,i){let n=t[0],r=t[1],s=t[2],a=i[0],h=i[1],l=i[2],c=i[3],o=h*s-l*r,d=l*n-a*s,u=a*r-h*n,f=h*u-l*d,g=l*o-a*u,p=a*d-h*o,m=c*2;return o*=m,d*=m,u*=m,f*=2,g*=2,p*=2,e[0]=n+o+f,e[1]=r+d+g,e[2]=s+u+p,e}const Je=function(){const e=[0,0,0],t=[0,0,0];return function(i,n){rt(e,i),rt(t,n),st(e,e),st(t,t);let r=ie(e,t);return r>1?0:r<-1?Math.PI:Math.acos(r)}}();function t1(e,t){return e[0]===t[0]&&e[1]===t[1]&&e[2]===t[2]}class R extends Array{constructor(t=0,i=t,n=t){return super(t,i,n),this}get x(){return this[0]}get y(){return this[1]}get z(){return this[2]}set x(t){this[0]=t}set y(t){this[1]=t}set z(t){this[2]=t}set(t,i=t,n=t){return t.length?this.copy(t):(qe(this,t,i,n),this)}copy(t){return rt(this,t),this}add(t,i){return i?xt(this,t,i):xt(this,this,t),this}sub(t,i){return i?Mt(this,t,i):Mt(this,this,t),this}multiply(t){return t.length?Ve(this,this,t):K0(this,this,t),this}divide(t){return t.length?ke(this,this,t):K0(this,this,1/t),this}inverse(t=this){return Ge(this,t),this}len(){return b0(this)}distance(t){return t?We(this,t):b0(this)}squaredLen(){return At(this)}squaredDistance(t){return t?Ye(this,t):At(this)}negate(t=this){return He(this,t),this}cross(t,i){return i?bt(this,t,i):bt(this,this,t),this}scale(t){return K0(this,this,t),this}normalize(){return st(this,this),this}dot(t){return ie(this,t)}equals(t){return t1(this,t)}applyMatrix3(t){return Qe(this,this,t),this}applyMatrix4(t){return je(this,this,t),this}scaleRotateMatrix4(t){return Ze(this,this,t),this}applyQuaternion(t){return Ke(this,this,t),this}angle(t){return Je(this,t)}lerp(t,i){return Xe(this,this,t,i),this}clone(){return new R(this[0],this[1],this[2])}fromArray(t,i=0){return this[0]=t[i],this[1]=t[i+1],this[2]=t[i+2],this}toArray(t=[],i=0){return t[i]=this[0],t[i+1]=this[1],t[i+2]=this[2],t}transformDirection(t){const i=this[0],n=this[1],r=this[2];return this[0]=t[0]*i+t[4]*n+t[8]*r,this[1]=t[1]*i+t[5]*n+t[9]*r,this[2]=t[2]*i+t[6]*n+t[10]*r,this.normalize()}}const St=new R;let e1=1,i1=1,Et=!1;class ne{constructor(t,i={}){t.canvas||console.error("gl not passed as first argument to Geometry"),this.gl=t,this.attributes=i,this.id=e1++,this.VAOs={},this.drawRange={start:0,count:0},this.instancedCount=0,this.gl.renderer.bindVertexArray(null),this.gl.renderer.currentGeometry=null,this.glState=this.gl.renderer.state;for(let n in i)this.addAttribute(n,i[n])}addAttribute(t,i){if(this.attributes[t]=i,i.id=i1++,i.size=i.size||1,i.type=i.type||(i.data.constructor===Float32Array?this.gl.FLOAT:i.data.constructor===Uint16Array?this.gl.UNSIGNED_SHORT:this.gl.UNSIGNED_INT),i.target=t==="index"?this.gl.ELEMENT_ARRAY_BUFFER:this.gl.ARRAY_BUFFER,i.normalized=i.normalized||!1,i.stride=i.stride||0,i.offset=i.offset||0,i.count=i.count||(i.stride?i.data.byteLength/i.stride:i.data.length/i.size),i.divisor=i.instanced||0,i.needsUpdate=!1,i.usage=i.usage||this.gl.STATIC_DRAW,i.buffer||this.updateAttribute(i),i.divisor){if(this.isInstanced=!0,this.instancedCount&&this.instancedCount!==i.count*i.divisor)return console.warn("geometry has multiple instanced buffers of different length"),this.instancedCount=Math.min(this.instancedCount,i.count*i.divisor);this.instancedCount=i.count*i.divisor}else t==="index"?this.drawRange.count=i.count:this.attributes.index||(this.drawRange.count=Math.max(this.drawRange.count,i.count))}updateAttribute(t){const i=!t.buffer;i&&(t.buffer=this.gl.createBuffer()),this.glState.boundBuffer!==t.buffer&&(this.gl.bindBuffer(t.target,t.buffer),this.glState.boundBuffer=t.buffer),i?this.gl.bufferData(t.target,t.data,t.usage):this.gl.bufferSubData(t.target,0,t.data),t.needsUpdate=!1}setIndex(t){this.addAttribute("index",t)}setDrawRange(t,i){this.drawRange.start=t,this.drawRange.count=i}setInstancedCount(t){this.instancedCount=t}createVAO(t){this.VAOs[t.attributeOrder]=this.gl.renderer.createVertexArray(),this.gl.renderer.bindVertexArray(this.VAOs[t.attributeOrder]),this.bindAttributes(t)}bindAttributes(t){t.attributeLocations.forEach((i,{name:n,type:r})=>{if(!this.attributes[n]){console.warn(`active attribute ${n} not being supplied`);return}const s=this.attributes[n];this.gl.bindBuffer(s.target,s.buffer),this.glState.boundBuffer=s.buffer;let a=1;r===35674&&(a=2),r===35675&&(a=3),r===35676&&(a=4);const h=s.size/a,l=a===1?0:a*a*4,c=a===1?0:a*4;for(let o=0;o<a;o++)this.gl.vertexAttribPointer(i+o,h,s.type,s.normalized,s.stride+l,s.offset+o*c),this.gl.enableVertexAttribArray(i+o),this.gl.renderer.vertexAttribDivisor(i+o,s.divisor)}),this.attributes.index&&this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER,this.attributes.index.buffer)}draw({program:t,mode:i=this.gl.TRIANGLES}){var r;this.gl.renderer.currentGeometry!==`${this.id}_${t.attributeOrder}`&&(this.VAOs[t.attributeOrder]||this.createVAO(t),this.gl.renderer.bindVertexArray(this.VAOs[t.attributeOrder]),this.gl.renderer.currentGeometry=`${this.id}_${t.attributeOrder}`),t.attributeLocations.forEach((s,{name:a})=>{const h=this.attributes[a];h.needsUpdate&&this.updateAttribute(h)});let n=2;((r=this.attributes.index)==null?void 0:r.type)===this.gl.UNSIGNED_INT&&(n=4),this.isInstanced?this.attributes.index?this.gl.renderer.drawElementsInstanced(i,this.drawRange.count,this.attributes.index.type,this.attributes.index.offset+this.drawRange.start*n,this.instancedCount):this.gl.renderer.drawArraysInstanced(i,this.drawRange.start,this.drawRange.count,this.instancedCount):this.attributes.index?this.gl.drawElements(i,this.drawRange.count,this.attributes.index.type,this.attributes.index.offset+this.drawRange.start*n):this.gl.drawArrays(i,this.drawRange.start,this.drawRange.count)}getPosition(){const t=this.attributes.position;if(t.data)return t;if(!Et)return console.warn("No position buffer data found to compute bounds"),Et=!0}computeBoundingBox(t){t||(t=this.getPosition());const i=t.data,n=t.size;this.bounds||(this.bounds={min:new R,max:new R,center:new R,scale:new R,radius:1/0});const r=this.bounds.min,s=this.bounds.max,a=this.bounds.center,h=this.bounds.scale;r.set(1/0),s.set(-1/0);for(let l=0,c=i.length;l<c;l+=n){const o=i[l],d=i[l+1],u=i[l+2];r.x=Math.min(o,r.x),r.y=Math.min(d,r.y),r.z=Math.min(u,r.z),s.x=Math.max(o,s.x),s.y=Math.max(d,s.y),s.z=Math.max(u,s.z)}h.sub(s,r),a.add(r,s).divide(2)}computeBoundingSphere(t){t||(t=this.getPosition());const i=t.data,n=t.size;this.bounds||this.computeBoundingBox(t);let r=0;for(let s=0,a=i.length;s<a;s+=n)St.fromArray(i,s),r=Math.max(r,this.bounds.center.squaredDistance(St));this.bounds.radius=Math.sqrt(r)}remove(){for(let t in this.VAOs)this.gl.renderer.deleteVertexArray(this.VAOs[t]),delete this.VAOs[t];for(let t in this.attributes)this.gl.deleteBuffer(this.attributes[t].buffer),delete this.attributes[t]}}let n1=1;const _t={};class $t{constructor(t,{vertex:i,fragment:n,uniforms:r={},transparent:s=!1,cullFace:a=t.BACK,frontFace:h=t.CCW,depthTest:l=!0,depthWrite:c=!0,depthFunc:o=t.LEQUAL}={}){t.canvas||console.error("gl not passed as first argument to Program"),this.gl=t,this.uniforms=r,this.id=n1++,i||console.warn("vertex shader not supplied"),n||console.warn("fragment shader not supplied"),this.transparent=s,this.cullFace=a,this.frontFace=h,this.depthTest=l,this.depthWrite=c,this.depthFunc=o,this.blendFunc={},this.blendEquation={},this.transparent&&!this.blendFunc.src&&(this.gl.renderer.premultipliedAlpha?this.setBlendFunc(this.gl.ONE,this.gl.ONE_MINUS_SRC_ALPHA):this.setBlendFunc(this.gl.SRC_ALPHA,this.gl.ONE_MINUS_SRC_ALPHA)),this.vertexShader=t.createShader(t.VERTEX_SHADER),this.fragmentShader=t.createShader(t.FRAGMENT_SHADER),this.program=t.createProgram(),t.attachShader(this.program,this.vertexShader),t.attachShader(this.program,this.fragmentShader),this.setShaders({vertex:i,fragment:n})}setShaders({vertex:t,fragment:i}){if(t&&(this.gl.shaderSource(this.vertexShader,t),this.gl.compileShader(this.vertexShader),this.gl.getShaderInfoLog(this.vertexShader)!==""&&console.warn(`${this.gl.getShaderInfoLog(this.vertexShader)}
Vertex Shader
${Ct(t)}`)),i&&(this.gl.shaderSource(this.fragmentShader,i),this.gl.compileShader(this.fragmentShader),this.gl.getShaderInfoLog(this.fragmentShader)!==""&&console.warn(`${this.gl.getShaderInfoLog(this.fragmentShader)}
Fragment Shader
${Ct(i)}`)),this.gl.linkProgram(this.program),!this.gl.getProgramParameter(this.program,this.gl.LINK_STATUS))return console.warn(this.gl.getProgramInfoLog(this.program));this.uniformLocations=new Map;let n=this.gl.getProgramParameter(this.program,this.gl.ACTIVE_UNIFORMS);for(let a=0;a<n;a++){let h=this.gl.getActiveUniform(this.program,a);this.uniformLocations.set(h,this.gl.getUniformLocation(this.program,h.name));const l=h.name.match(/(\w+)/g);h.uniformName=l[0],h.nameComponents=l.slice(1)}this.attributeLocations=new Map;const r=[],s=this.gl.getProgramParameter(this.program,this.gl.ACTIVE_ATTRIBUTES);for(let a=0;a<s;a++){const h=this.gl.getActiveAttrib(this.program,a),l=this.gl.getAttribLocation(this.program,h.name);l!==-1&&(r[l]=h.name,this.attributeLocations.set(h,l))}this.attributeOrder=r.join("")}setBlendFunc(t,i,n,r){this.blendFunc.src=t,this.blendFunc.dst=i,this.blendFunc.srcAlpha=n,this.blendFunc.dstAlpha=r,t&&(this.transparent=!0)}setBlendEquation(t,i){this.blendEquation.modeRGB=t,this.blendEquation.modeAlpha=i}applyState(){this.depthTest?this.gl.renderer.enable(this.gl.DEPTH_TEST):this.gl.renderer.disable(this.gl.DEPTH_TEST),this.cullFace?this.gl.renderer.enable(this.gl.CULL_FACE):this.gl.renderer.disable(this.gl.CULL_FACE),this.blendFunc.src?this.gl.renderer.enable(this.gl.BLEND):this.gl.renderer.disable(this.gl.BLEND),this.cullFace&&this.gl.renderer.setCullFace(this.cullFace),this.gl.renderer.setFrontFace(this.frontFace),this.gl.renderer.setDepthMask(this.depthWrite),this.gl.renderer.setDepthFunc(this.depthFunc),this.blendFunc.src&&this.gl.renderer.setBlendFunc(this.blendFunc.src,this.blendFunc.dst,this.blendFunc.srcAlpha,this.blendFunc.dstAlpha),this.gl.renderer.setBlendEquation(this.blendEquation.modeRGB,this.blendEquation.modeAlpha)}use({flipFaces:t=!1}={}){let i=-1;this.gl.renderer.state.currentProgram===this.id||(this.gl.useProgram(this.program),this.gl.renderer.state.currentProgram=this.id),this.uniformLocations.forEach((r,s)=>{let a=this.uniforms[s.uniformName];for(const h of s.nameComponents){if(!a)break;if(h in a)a=a[h];else{if(Array.isArray(a.value))break;a=void 0;break}}if(!a)return zt(`Active uniform ${s.name} has not been supplied`);if(a&&a.value===void 0)return zt(`${s.name} uniform is missing a value parameter`);if(a.value.texture)return i=i+1,a.value.update(i),J0(this.gl,s.type,r,i);if(a.value.length&&a.value[0].texture){const h=[];return a.value.forEach(l=>{i=i+1,l.update(i),h.push(i)}),J0(this.gl,s.type,r,h)}J0(this.gl,s.type,r,a.value)}),this.applyState(),t&&this.gl.renderer.setFrontFace(this.frontFace===this.gl.CCW?this.gl.CW:this.gl.CCW)}remove(){this.gl.deleteProgram(this.program)}}function J0(e,t,i,n){n=n.length?r1(n):n;const r=e.renderer.state.uniformLocations.get(i);if(n.length)if(r===void 0||r.length!==n.length)e.renderer.state.uniformLocations.set(i,n.slice(0));else{if(s1(r,n))return;r.set?r.set(n):a1(r,n),e.renderer.state.uniformLocations.set(i,r)}else{if(r===n)return;e.renderer.state.uniformLocations.set(i,n)}switch(t){case 5126:return n.length?e.uniform1fv(i,n):e.uniform1f(i,n);case 35664:return e.uniform2fv(i,n);case 35665:return e.uniform3fv(i,n);case 35666:return e.uniform4fv(i,n);case 35670:case 5124:case 35678:case 36306:case 35680:return n.length?e.uniform1iv(i,n):e.uniform1i(i,n);case 35671:case 35667:return e.uniform2iv(i,n);case 35672:case 35668:return e.uniform3iv(i,n);case 35673:case 35669:return e.uniform4iv(i,n);case 35674:return e.uniformMatrix2fv(i,!1,n);case 35675:return e.uniformMatrix3fv(i,!1,n);case 35676:return e.uniformMatrix4fv(i,!1,n)}}function Ct(e){let t=e.split(`
`);for(let i=0;i<t.length;i++)t[i]=i+1+": "+t[i];return t.join(`
`)}function r1(e){const t=e.length,i=e[0].length;if(i===void 0)return e;const n=t*i;let r=_t[n];r||(_t[n]=r=new Float32Array(n));for(let s=0;s<t;s++)r.set(e[s],s*i);return r}function s1(e,t){if(e.length!==t.length)return!1;for(let i=0,n=e.length;i<n;i++)if(e[i]!==t[i])return!1;return!0}function a1(e,t){for(let i=0,n=e.length;i<n;i++)e[i]=t[i]}let tt=0;function zt(e){tt>100||(console.warn(e),tt++,tt>100&&console.warn("More than 100 program warnings - stopping logs."))}const et=new R;let l1=1;class h1{constructor({canvas:t=document.createElement("canvas"),width:i=300,height:n=150,dpr:r=1,alpha:s=!1,depth:a=!0,stencil:h=!1,antialias:l=!1,premultipliedAlpha:c=!1,preserveDrawingBuffer:o=!1,powerPreference:d="default",autoClear:u=!0,webgl:f=2}={}){const g={alpha:s,depth:a,stencil:h,antialias:l,premultipliedAlpha:c,preserveDrawingBuffer:o,powerPreference:d};this.dpr=r,this.alpha=s,this.color=!0,this.depth=a,this.stencil=h,this.premultipliedAlpha=c,this.autoClear=u,this.id=l1++,f===2&&(this.gl=t.getContext("webgl2",g)),this.isWebgl2=!!this.gl,this.gl||(this.gl=t.getContext("webgl",g)),this.gl||console.error("unable to create webgl context"),this.gl.renderer=this,this.setSize(i,n),this.state={},this.state.blendFunc={src:this.gl.ONE,dst:this.gl.ZERO},this.state.blendEquation={modeRGB:this.gl.FUNC_ADD},this.state.cullFace=!1,this.state.frontFace=this.gl.CCW,this.state.depthMask=!0,this.state.depthFunc=this.gl.LEQUAL,this.state.premultiplyAlpha=!1,this.state.flipY=!1,this.state.unpackAlignment=4,this.state.framebuffer=null,this.state.viewport={x:0,y:0,width:null,height:null},this.state.textureUnits=[],this.state.activeTextureUnit=0,this.state.boundBuffer=null,this.state.uniformLocations=new Map,this.state.currentProgram=null,this.extensions={},this.isWebgl2?(this.getExtension("EXT_color_buffer_float"),this.getExtension("OES_texture_float_linear")):(this.getExtension("OES_texture_float"),this.getExtension("OES_texture_float_linear"),this.getExtension("OES_texture_half_float"),this.getExtension("OES_texture_half_float_linear"),this.getExtension("OES_element_index_uint"),this.getExtension("OES_standard_derivatives"),this.getExtension("EXT_sRGB"),this.getExtension("WEBGL_depth_texture"),this.getExtension("WEBGL_draw_buffers")),this.getExtension("WEBGL_compressed_texture_astc"),this.getExtension("EXT_texture_compression_bptc"),this.getExtension("WEBGL_compressed_texture_s3tc"),this.getExtension("WEBGL_compressed_texture_etc1"),this.getExtension("WEBGL_compressed_texture_pvrtc"),this.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc"),this.vertexAttribDivisor=this.getExtension("ANGLE_instanced_arrays","vertexAttribDivisor","vertexAttribDivisorANGLE"),this.drawArraysInstanced=this.getExtension("ANGLE_instanced_arrays","drawArraysInstanced","drawArraysInstancedANGLE"),this.drawElementsInstanced=this.getExtension("ANGLE_instanced_arrays","drawElementsInstanced","drawElementsInstancedANGLE"),this.createVertexArray=this.getExtension("OES_vertex_array_object","createVertexArray","createVertexArrayOES"),this.bindVertexArray=this.getExtension("OES_vertex_array_object","bindVertexArray","bindVertexArrayOES"),this.deleteVertexArray=this.getExtension("OES_vertex_array_object","deleteVertexArray","deleteVertexArrayOES"),this.drawBuffers=this.getExtension("WEBGL_draw_buffers","drawBuffers","drawBuffersWEBGL"),this.parameters={},this.parameters.maxTextureUnits=this.gl.getParameter(this.gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS),this.parameters.maxAnisotropy=this.getExtension("EXT_texture_filter_anisotropic")?this.gl.getParameter(this.getExtension("EXT_texture_filter_anisotropic").MAX_TEXTURE_MAX_ANISOTROPY_EXT):0}setSize(t,i){this.width=t,this.height=i,this.gl.canvas.width=t*this.dpr,this.gl.canvas.height=i*this.dpr,this.gl.canvas.style&&Object.assign(this.gl.canvas.style,{width:t+"px",height:i+"px"})}setViewport(t,i,n=0,r=0){this.state.viewport.width===t&&this.state.viewport.height===i||(this.state.viewport.width=t,this.state.viewport.height=i,this.state.viewport.x=n,this.state.viewport.y=r,this.gl.viewport(n,r,t,i))}setScissor(t,i,n=0,r=0){this.gl.scissor(n,r,t,i)}enable(t){this.state[t]!==!0&&(this.gl.enable(t),this.state[t]=!0)}disable(t){this.state[t]!==!1&&(this.gl.disable(t),this.state[t]=!1)}setBlendFunc(t,i,n,r){this.state.blendFunc.src===t&&this.state.blendFunc.dst===i&&this.state.blendFunc.srcAlpha===n&&this.state.blendFunc.dstAlpha===r||(this.state.blendFunc.src=t,this.state.blendFunc.dst=i,this.state.blendFunc.srcAlpha=n,this.state.blendFunc.dstAlpha=r,n!==void 0?this.gl.blendFuncSeparate(t,i,n,r):this.gl.blendFunc(t,i))}setBlendEquation(t,i){t=t||this.gl.FUNC_ADD,!(this.state.blendEquation.modeRGB===t&&this.state.blendEquation.modeAlpha===i)&&(this.state.blendEquation.modeRGB=t,this.state.blendEquation.modeAlpha=i,i!==void 0?this.gl.blendEquationSeparate(t,i):this.gl.blendEquation(t))}setCullFace(t){this.state.cullFace!==t&&(this.state.cullFace=t,this.gl.cullFace(t))}setFrontFace(t){this.state.frontFace!==t&&(this.state.frontFace=t,this.gl.frontFace(t))}setDepthMask(t){this.state.depthMask!==t&&(this.state.depthMask=t,this.gl.depthMask(t))}setDepthFunc(t){this.state.depthFunc!==t&&(this.state.depthFunc=t,this.gl.depthFunc(t))}activeTexture(t){this.state.activeTextureUnit!==t&&(this.state.activeTextureUnit=t,this.gl.activeTexture(this.gl.TEXTURE0+t))}bindFramebuffer({target:t=this.gl.FRAMEBUFFER,buffer:i=null}={}){this.state.framebuffer!==i&&(this.state.framebuffer=i,this.gl.bindFramebuffer(t,i))}getExtension(t,i,n){return i&&this.gl[i]?this.gl[i].bind(this.gl):(this.extensions[t]||(this.extensions[t]=this.gl.getExtension(t)),i?this.extensions[t]?this.extensions[t][n].bind(this.extensions[t]):null:this.extensions[t])}sortOpaque(t,i){return t.renderOrder!==i.renderOrder?t.renderOrder-i.renderOrder:t.program.id!==i.program.id?t.program.id-i.program.id:t.zDepth!==i.zDepth?t.zDepth-i.zDepth:i.id-t.id}sortTransparent(t,i){return t.renderOrder!==i.renderOrder?t.renderOrder-i.renderOrder:t.zDepth!==i.zDepth?i.zDepth-t.zDepth:i.id-t.id}sortUI(t,i){return t.renderOrder!==i.renderOrder?t.renderOrder-i.renderOrder:t.program.id!==i.program.id?t.program.id-i.program.id:i.id-t.id}getRenderList({scene:t,camera:i,frustumCull:n,sort:r}){let s=[];if(i&&n&&i.updateFrustum(),t.traverse(a=>{if(!a.visible)return!0;a.draw&&(n&&a.frustumCulled&&i&&!i.frustumIntersectsMesh(a)||s.push(a))}),r){const a=[],h=[],l=[];s.forEach(c=>{c.program.transparent?c.program.depthTest?h.push(c):l.push(c):a.push(c),c.zDepth=0,!(c.renderOrder!==0||!c.program.depthTest||!i)&&(c.worldMatrix.getTranslation(et),et.applyMatrix4(i.projectionViewMatrix),c.zDepth=et.z)}),a.sort(this.sortOpaque),h.sort(this.sortTransparent),l.sort(this.sortUI),s=a.concat(h,l)}return s}render({scene:t,camera:i,target:n=null,update:r=!0,sort:s=!0,frustumCull:a=!0,clear:h}){n===null?(this.bindFramebuffer(),this.setViewport(this.width*this.dpr,this.height*this.dpr)):(this.bindFramebuffer(n),this.setViewport(n.width,n.height)),(h||this.autoClear&&h!==!1)&&(this.depth&&(!n||n.depth)&&(this.enable(this.gl.DEPTH_TEST),this.setDepthMask(!0)),this.gl.clear((this.color?this.gl.COLOR_BUFFER_BIT:0)|(this.depth?this.gl.DEPTH_BUFFER_BIT:0)|(this.stencil?this.gl.STENCIL_BUFFER_BIT:0))),r&&t.updateMatrixWorld(),i&&i.updateMatrixWorld(),this.getRenderList({scene:t,camera:i,frustumCull:a,sort:s}).forEach(c=>{c.draw({camera:i})})}}function o1(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e}function c1(e,t,i,n,r){return e[0]=t,e[1]=i,e[2]=n,e[3]=r,e}function d1(e,t){let i=t[0],n=t[1],r=t[2],s=t[3],a=i*i+n*n+r*r+s*s;return a>0&&(a=1/Math.sqrt(a)),e[0]=i*a,e[1]=n*a,e[2]=r*a,e[3]=s*a,e}function f1(e,t){return e[0]*t[0]+e[1]*t[1]+e[2]*t[2]+e[3]*t[3]}function u1(e){return e[0]=0,e[1]=0,e[2]=0,e[3]=1,e}function g1(e,t,i){i=i*.5;let n=Math.sin(i);return e[0]=n*t[0],e[1]=n*t[1],e[2]=n*t[2],e[3]=Math.cos(i),e}function Ut(e,t,i){let n=t[0],r=t[1],s=t[2],a=t[3],h=i[0],l=i[1],c=i[2],o=i[3];return e[0]=n*o+a*h+r*c-s*l,e[1]=r*o+a*l+s*h-n*c,e[2]=s*o+a*c+n*l-r*h,e[3]=a*o-n*h-r*l-s*c,e}function p1(e,t,i){i*=.5;let n=t[0],r=t[1],s=t[2],a=t[3],h=Math.sin(i),l=Math.cos(i);return e[0]=n*l+a*h,e[1]=r*l+s*h,e[2]=s*l-r*h,e[3]=a*l-n*h,e}function m1(e,t,i){i*=.5;let n=t[0],r=t[1],s=t[2],a=t[3],h=Math.sin(i),l=Math.cos(i);return e[0]=n*l-s*h,e[1]=r*l+a*h,e[2]=s*l+n*h,e[3]=a*l-r*h,e}function y1(e,t,i){i*=.5;let n=t[0],r=t[1],s=t[2],a=t[3],h=Math.sin(i),l=Math.cos(i);return e[0]=n*l+r*h,e[1]=r*l-n*h,e[2]=s*l+a*h,e[3]=a*l-s*h,e}function v1(e,t,i,n){let r=t[0],s=t[1],a=t[2],h=t[3],l=i[0],c=i[1],o=i[2],d=i[3],u,f,g,p,m;return f=r*l+s*c+a*o+h*d,f<0&&(f=-f,l=-l,c=-c,o=-o,d=-d),1-f>1e-6?(u=Math.acos(f),g=Math.sin(u),p=Math.sin((1-n)*u)/g,m=Math.sin(n*u)/g):(p=1-n,m=n),e[0]=p*r+m*l,e[1]=p*s+m*c,e[2]=p*a+m*o,e[3]=p*h+m*d,e}function w1(e,t){let i=t[0],n=t[1],r=t[2],s=t[3],a=i*i+n*n+r*r+s*s,h=a?1/a:0;return e[0]=-i*h,e[1]=-n*h,e[2]=-r*h,e[3]=s*h,e}function x1(e,t){return e[0]=-t[0],e[1]=-t[1],e[2]=-t[2],e[3]=t[3],e}function M1(e,t){let i=t[0]+t[4]+t[8],n;if(i>0)n=Math.sqrt(i+1),e[3]=.5*n,n=.5/n,e[0]=(t[5]-t[7])*n,e[1]=(t[6]-t[2])*n,e[2]=(t[1]-t[3])*n;else{let r=0;t[4]>t[0]&&(r=1),t[8]>t[r*3+r]&&(r=2);let s=(r+1)%3,a=(r+2)%3;n=Math.sqrt(t[r*3+r]-t[s*3+s]-t[a*3+a]+1),e[r]=.5*n,n=.5/n,e[3]=(t[s*3+a]-t[a*3+s])*n,e[s]=(t[s*3+r]+t[r*3+s])*n,e[a]=(t[a*3+r]+t[r*3+a])*n}return e}function A1(e,t,i="YXZ"){let n=Math.sin(t[0]*.5),r=Math.cos(t[0]*.5),s=Math.sin(t[1]*.5),a=Math.cos(t[1]*.5),h=Math.sin(t[2]*.5),l=Math.cos(t[2]*.5);return i==="XYZ"?(e[0]=n*a*l+r*s*h,e[1]=r*s*l-n*a*h,e[2]=r*a*h+n*s*l,e[3]=r*a*l-n*s*h):i==="YXZ"?(e[0]=n*a*l+r*s*h,e[1]=r*s*l-n*a*h,e[2]=r*a*h-n*s*l,e[3]=r*a*l+n*s*h):i==="ZXY"?(e[0]=n*a*l-r*s*h,e[1]=r*s*l+n*a*h,e[2]=r*a*h+n*s*l,e[3]=r*a*l-n*s*h):i==="ZYX"?(e[0]=n*a*l-r*s*h,e[1]=r*s*l+n*a*h,e[2]=r*a*h-n*s*l,e[3]=r*a*l+n*s*h):i==="YZX"?(e[0]=n*a*l+r*s*h,e[1]=r*s*l+n*a*h,e[2]=r*a*h-n*s*l,e[3]=r*a*l-n*s*h):i==="XZY"&&(e[0]=n*a*l-r*s*h,e[1]=r*s*l-n*a*h,e[2]=r*a*h+n*s*l,e[3]=r*a*l+n*s*h),e}const b1=o1,S1=c1,E1=f1,_1=d1;class $1 extends Array{constructor(t=0,i=0,n=0,r=1){super(t,i,n,r),this.onChange=()=>{},this._target=this;const s=["0","1","2","3"];return new Proxy(this,{set(a,h){const l=Reflect.set(...arguments);return l&&s.includes(h)&&a.onChange(),l}})}get x(){return this[0]}get y(){return this[1]}get z(){return this[2]}get w(){return this[3]}set x(t){this._target[0]=t,this.onChange()}set y(t){this._target[1]=t,this.onChange()}set z(t){this._target[2]=t,this.onChange()}set w(t){this._target[3]=t,this.onChange()}identity(){return u1(this._target),this.onChange(),this}set(t,i,n,r){return t.length?this.copy(t):(S1(this._target,t,i,n,r),this.onChange(),this)}rotateX(t){return p1(this._target,this._target,t),this.onChange(),this}rotateY(t){return m1(this._target,this._target,t),this.onChange(),this}rotateZ(t){return y1(this._target,this._target,t),this.onChange(),this}inverse(t=this._target){return w1(this._target,t),this.onChange(),this}conjugate(t=this._target){return x1(this._target,t),this.onChange(),this}copy(t){return b1(this._target,t),this.onChange(),this}normalize(t=this._target){return _1(this._target,t),this.onChange(),this}multiply(t,i){return i?Ut(this._target,t,i):Ut(this._target,this._target,t),this.onChange(),this}dot(t){return E1(this._target,t)}fromMatrix3(t){return M1(this._target,t),this.onChange(),this}fromEuler(t,i){return A1(this._target,t,t.order),i||this.onChange(),this}fromAxisAngle(t,i){return g1(this._target,t,i),this.onChange(),this}slerp(t,i){return v1(this._target,this._target,t,i),this.onChange(),this}fromArray(t,i=0){return this._target[0]=t[i],this._target[1]=t[i+1],this._target[2]=t[i+2],this._target[3]=t[i+3],this.onChange(),this}toArray(t=[],i=0){return t[i]=this[0],t[i+1]=this[1],t[i+2]=this[2],t[i+3]=this[3],t}}const C1=1e-6;function z1(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e[9]=t[9],e[10]=t[10],e[11]=t[11],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15],e}function U1(e,t,i,n,r,s,a,h,l,c,o,d,u,f,g,p,m){return e[0]=t,e[1]=i,e[2]=n,e[3]=r,e[4]=s,e[5]=a,e[6]=h,e[7]=l,e[8]=c,e[9]=o,e[10]=d,e[11]=u,e[12]=f,e[13]=g,e[14]=p,e[15]=m,e}function T1(e){return e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=1,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=1,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e}function L1(e,t){let i=t[0],n=t[1],r=t[2],s=t[3],a=t[4],h=t[5],l=t[6],c=t[7],o=t[8],d=t[9],u=t[10],f=t[11],g=t[12],p=t[13],m=t[14],w=t[15],C=i*h-n*a,A=i*l-r*a,_=i*c-s*a,E=n*l-r*h,b=n*c-s*h,U=r*c-s*l,O=o*p-d*g,T=o*m-u*g,B=o*w-f*g,N=d*m-u*p,P=d*w-f*p,L=u*w-f*m,z=C*L-A*P+_*N+E*B-b*T+U*O;return z?(z=1/z,e[0]=(h*L-l*P+c*N)*z,e[1]=(r*P-n*L-s*N)*z,e[2]=(p*U-m*b+w*E)*z,e[3]=(u*b-d*U-f*E)*z,e[4]=(l*B-a*L-c*T)*z,e[5]=(i*L-r*B+s*T)*z,e[6]=(m*_-g*U-w*A)*z,e[7]=(o*U-u*_+f*A)*z,e[8]=(a*P-h*B+c*O)*z,e[9]=(n*B-i*P-s*O)*z,e[10]=(g*b-p*_+w*C)*z,e[11]=(d*_-o*b-f*C)*z,e[12]=(h*T-a*N-l*O)*z,e[13]=(i*N-n*T+r*O)*z,e[14]=(p*A-g*E-m*C)*z,e[15]=(o*E-d*A+u*C)*z,e):null}function re(e){let t=e[0],i=e[1],n=e[2],r=e[3],s=e[4],a=e[5],h=e[6],l=e[7],c=e[8],o=e[9],d=e[10],u=e[11],f=e[12],g=e[13],p=e[14],m=e[15],w=t*a-i*s,C=t*h-n*s,A=t*l-r*s,_=i*h-n*a,E=i*l-r*a,b=n*l-r*h,U=c*g-o*f,O=c*p-d*f,T=c*m-u*f,B=o*p-d*g,N=o*m-u*g,P=d*m-u*p;return w*P-C*N+A*B+_*T-E*O+b*U}function Tt(e,t,i){let n=t[0],r=t[1],s=t[2],a=t[3],h=t[4],l=t[5],c=t[6],o=t[7],d=t[8],u=t[9],f=t[10],g=t[11],p=t[12],m=t[13],w=t[14],C=t[15],A=i[0],_=i[1],E=i[2],b=i[3];return e[0]=A*n+_*h+E*d+b*p,e[1]=A*r+_*l+E*u+b*m,e[2]=A*s+_*c+E*f+b*w,e[3]=A*a+_*o+E*g+b*C,A=i[4],_=i[5],E=i[6],b=i[7],e[4]=A*n+_*h+E*d+b*p,e[5]=A*r+_*l+E*u+b*m,e[6]=A*s+_*c+E*f+b*w,e[7]=A*a+_*o+E*g+b*C,A=i[8],_=i[9],E=i[10],b=i[11],e[8]=A*n+_*h+E*d+b*p,e[9]=A*r+_*l+E*u+b*m,e[10]=A*s+_*c+E*f+b*w,e[11]=A*a+_*o+E*g+b*C,A=i[12],_=i[13],E=i[14],b=i[15],e[12]=A*n+_*h+E*d+b*p,e[13]=A*r+_*l+E*u+b*m,e[14]=A*s+_*c+E*f+b*w,e[15]=A*a+_*o+E*g+b*C,e}function I1(e,t,i){let n=i[0],r=i[1],s=i[2],a,h,l,c,o,d,u,f,g,p,m,w;return t===e?(e[12]=t[0]*n+t[4]*r+t[8]*s+t[12],e[13]=t[1]*n+t[5]*r+t[9]*s+t[13],e[14]=t[2]*n+t[6]*r+t[10]*s+t[14],e[15]=t[3]*n+t[7]*r+t[11]*s+t[15]):(a=t[0],h=t[1],l=t[2],c=t[3],o=t[4],d=t[5],u=t[6],f=t[7],g=t[8],p=t[9],m=t[10],w=t[11],e[0]=a,e[1]=h,e[2]=l,e[3]=c,e[4]=o,e[5]=d,e[6]=u,e[7]=f,e[8]=g,e[9]=p,e[10]=m,e[11]=w,e[12]=a*n+o*r+g*s+t[12],e[13]=h*n+d*r+p*s+t[13],e[14]=l*n+u*r+m*s+t[14],e[15]=c*n+f*r+w*s+t[15]),e}function R1(e,t,i){let n=i[0],r=i[1],s=i[2];return e[0]=t[0]*n,e[1]=t[1]*n,e[2]=t[2]*n,e[3]=t[3]*n,e[4]=t[4]*r,e[5]=t[5]*r,e[6]=t[6]*r,e[7]=t[7]*r,e[8]=t[8]*s,e[9]=t[9]*s,e[10]=t[10]*s,e[11]=t[11]*s,e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15],e}function O1(e,t,i,n){let r=n[0],s=n[1],a=n[2],h=Math.hypot(r,s,a),l,c,o,d,u,f,g,p,m,w,C,A,_,E,b,U,O,T,B,N,P,L,z,G;return Math.abs(h)<C1?null:(h=1/h,r*=h,s*=h,a*=h,l=Math.sin(i),c=Math.cos(i),o=1-c,d=t[0],u=t[1],f=t[2],g=t[3],p=t[4],m=t[5],w=t[6],C=t[7],A=t[8],_=t[9],E=t[10],b=t[11],U=r*r*o+c,O=s*r*o+a*l,T=a*r*o-s*l,B=r*s*o-a*l,N=s*s*o+c,P=a*s*o+r*l,L=r*a*o+s*l,z=s*a*o-r*l,G=a*a*o+c,e[0]=d*U+p*O+A*T,e[1]=u*U+m*O+_*T,e[2]=f*U+w*O+E*T,e[3]=g*U+C*O+b*T,e[4]=d*B+p*N+A*P,e[5]=u*B+m*N+_*P,e[6]=f*B+w*N+E*P,e[7]=g*B+C*N+b*P,e[8]=d*L+p*z+A*G,e[9]=u*L+m*z+_*G,e[10]=f*L+w*z+E*G,e[11]=g*L+C*z+b*G,t!==e&&(e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15]),e)}function P1(e,t){return e[0]=t[12],e[1]=t[13],e[2]=t[14],e}function se(e,t){let i=t[0],n=t[1],r=t[2],s=t[4],a=t[5],h=t[6],l=t[8],c=t[9],o=t[10];return e[0]=Math.hypot(i,n,r),e[1]=Math.hypot(s,a,h),e[2]=Math.hypot(l,c,o),e}function B1(e){let t=e[0],i=e[1],n=e[2],r=e[4],s=e[5],a=e[6],h=e[8],l=e[9],c=e[10];const o=t*t+i*i+n*n,d=r*r+s*s+a*a,u=h*h+l*l+c*c;return Math.sqrt(Math.max(o,d,u))}const ae=function(){const e=[1,1,1];return function(t,i){let n=e;se(n,i);let r=1/n[0],s=1/n[1],a=1/n[2],h=i[0]*r,l=i[1]*s,c=i[2]*a,o=i[4]*r,d=i[5]*s,u=i[6]*a,f=i[8]*r,g=i[9]*s,p=i[10]*a,m=h+d+p,w=0;return m>0?(w=Math.sqrt(m+1)*2,t[3]=.25*w,t[0]=(u-g)/w,t[1]=(f-c)/w,t[2]=(l-o)/w):h>d&&h>p?(w=Math.sqrt(1+h-d-p)*2,t[3]=(u-g)/w,t[0]=.25*w,t[1]=(l+o)/w,t[2]=(f+c)/w):d>p?(w=Math.sqrt(1+d-h-p)*2,t[3]=(f-c)/w,t[0]=(l+o)/w,t[1]=.25*w,t[2]=(u+g)/w):(w=Math.sqrt(1+p-h-d)*2,t[3]=(l-o)/w,t[0]=(f+c)/w,t[1]=(u+g)/w,t[2]=.25*w),t}}();function N1(e,t,i,n){let r=b0([e[0],e[1],e[2]]);const s=b0([e[4],e[5],e[6]]),a=b0([e[8],e[9],e[10]]);re(e)<0&&(r=-r),i[0]=e[12],i[1]=e[13],i[2]=e[14];const l=e.slice(),c=1/r,o=1/s,d=1/a;l[0]*=c,l[1]*=c,l[2]*=c,l[4]*=o,l[5]*=o,l[6]*=o,l[8]*=d,l[9]*=d,l[10]*=d,ae(t,l),n[0]=r,n[1]=s,n[2]=a}function F1(e,t,i,n){const r=e,s=t[0],a=t[1],h=t[2],l=t[3],c=s+s,o=a+a,d=h+h,u=s*c,f=s*o,g=s*d,p=a*o,m=a*d,w=h*d,C=l*c,A=l*o,_=l*d,E=n[0],b=n[1],U=n[2];return r[0]=(1-(p+w))*E,r[1]=(f+_)*E,r[2]=(g-A)*E,r[3]=0,r[4]=(f-_)*b,r[5]=(1-(u+w))*b,r[6]=(m+C)*b,r[7]=0,r[8]=(g+A)*U,r[9]=(m-C)*U,r[10]=(1-(u+p))*U,r[11]=0,r[12]=i[0],r[13]=i[1],r[14]=i[2],r[15]=1,r}function D1(e,t){let i=t[0],n=t[1],r=t[2],s=t[3],a=i+i,h=n+n,l=r+r,c=i*a,o=n*a,d=n*h,u=r*a,f=r*h,g=r*l,p=s*a,m=s*h,w=s*l;return e[0]=1-d-g,e[1]=o+w,e[2]=u-m,e[3]=0,e[4]=o-w,e[5]=1-c-g,e[6]=f+p,e[7]=0,e[8]=u+m,e[9]=f-p,e[10]=1-c-d,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e}function q1(e,t,i,n,r){let s=1/Math.tan(t/2),a=1/(n-r);return e[0]=s/i,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=s,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=(r+n)*a,e[11]=-1,e[12]=0,e[13]=0,e[14]=2*r*n*a,e[15]=0,e}function V1(e,t,i,n,r,s,a){let h=1/(t-i),l=1/(n-r),c=1/(s-a);return e[0]=-2*h,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=-2*l,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=2*c,e[11]=0,e[12]=(t+i)*h,e[13]=(r+n)*l,e[14]=(a+s)*c,e[15]=1,e}function k1(e,t,i,n){let r=t[0],s=t[1],a=t[2],h=n[0],l=n[1],c=n[2],o=r-i[0],d=s-i[1],u=a-i[2],f=o*o+d*d+u*u;f===0?u=1:(f=1/Math.sqrt(f),o*=f,d*=f,u*=f);let g=l*u-c*d,p=c*o-h*u,m=h*d-l*o;return f=g*g+p*p+m*m,f===0&&(c?h+=1e-6:l?c+=1e-6:l+=1e-6,g=l*u-c*d,p=c*o-h*u,m=h*d-l*o,f=g*g+p*p+m*m),f=1/Math.sqrt(f),g*=f,p*=f,m*=f,e[0]=g,e[1]=p,e[2]=m,e[3]=0,e[4]=d*m-u*p,e[5]=u*g-o*m,e[6]=o*p-d*g,e[7]=0,e[8]=o,e[9]=d,e[10]=u,e[11]=0,e[12]=r,e[13]=s,e[14]=a,e[15]=1,e}function Lt(e,t,i){return e[0]=t[0]+i[0],e[1]=t[1]+i[1],e[2]=t[2]+i[2],e[3]=t[3]+i[3],e[4]=t[4]+i[4],e[5]=t[5]+i[5],e[6]=t[6]+i[6],e[7]=t[7]+i[7],e[8]=t[8]+i[8],e[9]=t[9]+i[9],e[10]=t[10]+i[10],e[11]=t[11]+i[11],e[12]=t[12]+i[12],e[13]=t[13]+i[13],e[14]=t[14]+i[14],e[15]=t[15]+i[15],e}function It(e,t,i){return e[0]=t[0]-i[0],e[1]=t[1]-i[1],e[2]=t[2]-i[2],e[3]=t[3]-i[3],e[4]=t[4]-i[4],e[5]=t[5]-i[5],e[6]=t[6]-i[6],e[7]=t[7]-i[7],e[8]=t[8]-i[8],e[9]=t[9]-i[9],e[10]=t[10]-i[10],e[11]=t[11]-i[11],e[12]=t[12]-i[12],e[13]=t[13]-i[13],e[14]=t[14]-i[14],e[15]=t[15]-i[15],e}function W1(e,t,i){return e[0]=t[0]*i,e[1]=t[1]*i,e[2]=t[2]*i,e[3]=t[3]*i,e[4]=t[4]*i,e[5]=t[5]*i,e[6]=t[6]*i,e[7]=t[7]*i,e[8]=t[8]*i,e[9]=t[9]*i,e[10]=t[10]*i,e[11]=t[11]*i,e[12]=t[12]*i,e[13]=t[13]*i,e[14]=t[14]*i,e[15]=t[15]*i,e}class s0 extends Array{constructor(t=1,i=0,n=0,r=0,s=0,a=1,h=0,l=0,c=0,o=0,d=1,u=0,f=0,g=0,p=0,m=1){return super(t,i,n,r,s,a,h,l,c,o,d,u,f,g,p,m),this}get x(){return this[12]}get y(){return this[13]}get z(){return this[14]}get w(){return this[15]}set x(t){this[12]=t}set y(t){this[13]=t}set z(t){this[14]=t}set w(t){this[15]=t}set(t,i,n,r,s,a,h,l,c,o,d,u,f,g,p,m){return t.length?this.copy(t):(U1(this,t,i,n,r,s,a,h,l,c,o,d,u,f,g,p,m),this)}translate(t,i=this){return I1(this,i,t),this}rotate(t,i,n=this){return O1(this,n,t,i),this}scale(t,i=this){return R1(this,i,typeof t=="number"?[t,t,t]:t),this}add(t,i){return i?Lt(this,t,i):Lt(this,this,t),this}sub(t,i){return i?It(this,t,i):It(this,this,t),this}multiply(t,i){return t.length?i?Tt(this,t,i):Tt(this,this,t):W1(this,this,t),this}identity(){return T1(this),this}copy(t){return z1(this,t),this}fromPerspective({fov:t,aspect:i,near:n,far:r}={}){return q1(this,t,i,n,r),this}fromOrthogonal({left:t,right:i,bottom:n,top:r,near:s,far:a}){return V1(this,t,i,n,r,s,a),this}fromQuaternion(t){return D1(this,t),this}setPosition(t){return this.x=t[0],this.y=t[1],this.z=t[2],this}inverse(t=this){return L1(this,t),this}compose(t,i,n){return F1(this,t,i,n),this}decompose(t,i,n){return N1(this,t,i,n),this}getRotation(t){return ae(t,this),this}getTranslation(t){return P1(t,this),this}getScaling(t){return se(t,this),this}getMaxScaleOnAxis(){return B1(this)}lookAt(t,i,n){return k1(this,t,i,n),this}determinant(){return re(this)}fromArray(t,i=0){return this[0]=t[i],this[1]=t[i+1],this[2]=t[i+2],this[3]=t[i+3],this[4]=t[i+4],this[5]=t[i+5],this[6]=t[i+6],this[7]=t[i+7],this[8]=t[i+8],this[9]=t[i+9],this[10]=t[i+10],this[11]=t[i+11],this[12]=t[i+12],this[13]=t[i+13],this[14]=t[i+14],this[15]=t[i+15],this}toArray(t=[],i=0){return t[i]=this[0],t[i+1]=this[1],t[i+2]=this[2],t[i+3]=this[3],t[i+4]=this[4],t[i+5]=this[5],t[i+6]=this[6],t[i+7]=this[7],t[i+8]=this[8],t[i+9]=this[9],t[i+10]=this[10],t[i+11]=this[11],t[i+12]=this[12],t[i+13]=this[13],t[i+14]=this[14],t[i+15]=this[15],t}}function Y1(e,t,i="YXZ"){return i==="XYZ"?(e[1]=Math.asin(Math.min(Math.max(t[8],-1),1)),Math.abs(t[8])<.99999?(e[0]=Math.atan2(-t[9],t[10]),e[2]=Math.atan2(-t[4],t[0])):(e[0]=Math.atan2(t[6],t[5]),e[2]=0)):i==="YXZ"?(e[0]=Math.asin(-Math.min(Math.max(t[9],-1),1)),Math.abs(t[9])<.99999?(e[1]=Math.atan2(t[8],t[10]),e[2]=Math.atan2(t[1],t[5])):(e[1]=Math.atan2(-t[2],t[0]),e[2]=0)):i==="ZXY"?(e[0]=Math.asin(Math.min(Math.max(t[6],-1),1)),Math.abs(t[6])<.99999?(e[1]=Math.atan2(-t[2],t[10]),e[2]=Math.atan2(-t[4],t[5])):(e[1]=0,e[2]=Math.atan2(t[1],t[0]))):i==="ZYX"?(e[1]=Math.asin(-Math.min(Math.max(t[2],-1),1)),Math.abs(t[2])<.99999?(e[0]=Math.atan2(t[6],t[10]),e[2]=Math.atan2(t[1],t[0])):(e[0]=0,e[2]=Math.atan2(-t[4],t[5]))):i==="YZX"?(e[2]=Math.asin(Math.min(Math.max(t[1],-1),1)),Math.abs(t[1])<.99999?(e[0]=Math.atan2(-t[9],t[5]),e[1]=Math.atan2(-t[2],t[0])):(e[0]=0,e[1]=Math.atan2(t[8],t[10]))):i==="XZY"&&(e[2]=Math.asin(-Math.min(Math.max(t[4],-1),1)),Math.abs(t[4])<.99999?(e[0]=Math.atan2(t[6],t[5]),e[1]=Math.atan2(t[8],t[0])):(e[0]=Math.atan2(-t[9],t[10]),e[1]=0)),e}const Rt=new s0;class H1 extends Array{constructor(t=0,i=t,n=t,r="YXZ"){super(t,i,n),this.order=r,this.onChange=()=>{},this._target=this;const s=["0","1","2"];return new Proxy(this,{set(a,h){const l=Reflect.set(...arguments);return l&&s.includes(h)&&a.onChange(),l}})}get x(){return this[0]}get y(){return this[1]}get z(){return this[2]}set x(t){this._target[0]=t,this.onChange()}set y(t){this._target[1]=t,this.onChange()}set z(t){this._target[2]=t,this.onChange()}set(t,i=t,n=t){return t.length?this.copy(t):(this._target[0]=t,this._target[1]=i,this._target[2]=n,this.onChange(),this)}copy(t){return this._target[0]=t[0],this._target[1]=t[1],this._target[2]=t[2],this.onChange(),this}reorder(t){return this._target.order=t,this.onChange(),this}fromRotationMatrix(t,i=this.order){return Y1(this._target,t,i),this.onChange(),this}fromQuaternion(t,i=this.order,n){return Rt.fromQuaternion(t),this._target.fromRotationMatrix(Rt,i),n||this.onChange(),this}fromArray(t,i=0){return this._target[0]=t[i],this._target[1]=t[i+1],this._target[2]=t[i+2],this}toArray(t=[],i=0){return t[i]=this[0],t[i+1]=this[1],t[i+2]=this[2],t}}class ft{constructor(){this.parent=null,this.children=[],this.visible=!0,this.matrix=new s0,this.worldMatrix=new s0,this.matrixAutoUpdate=!0,this.worldMatrixNeedsUpdate=!1,this.position=new R,this.quaternion=new $1,this.scale=new R(1),this.rotation=new H1,this.up=new R(0,1,0),this.rotation._target.onChange=()=>this.quaternion.fromEuler(this.rotation,!0),this.quaternion._target.onChange=()=>this.rotation.fromQuaternion(this.quaternion,void 0,!0)}setParent(t,i=!0){this.parent&&t!==this.parent&&this.parent.removeChild(this,!1),this.parent=t,i&&t&&t.addChild(this,!1)}addChild(t,i=!0){~this.children.indexOf(t)||this.children.push(t),i&&t.setParent(this,!1)}removeChild(t,i=!0){~this.children.indexOf(t)&&this.children.splice(this.children.indexOf(t),1),i&&t.setParent(null,!1)}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.worldMatrixNeedsUpdate||t)&&(this.parent===null?this.worldMatrix.copy(this.matrix):this.worldMatrix.multiply(this.parent.worldMatrix,this.matrix),this.worldMatrixNeedsUpdate=!1,t=!0);for(let i=0,n=this.children.length;i<n;i++)this.children[i].updateMatrixWorld(t)}updateMatrix(){this.matrix.compose(this.quaternion,this.position,this.scale),this.worldMatrixNeedsUpdate=!0}traverse(t){if(!t(this))for(let i=0,n=this.children.length;i<n;i++)this.children[i].traverse(t)}decompose(){this.matrix.decompose(this.quaternion._target,this.position,this.scale),this.rotation.fromQuaternion(this.quaternion)}lookAt(t,i=!1){i?this.matrix.lookAt(this.position,t,this.up):this.matrix.lookAt(t,this.position,this.up),this.matrix.getRotation(this.quaternion._target),this.rotation.fromQuaternion(this.quaternion)}}const G1=new s0,X1=new R,j1=new R;class Z1 extends ft{constructor(t,{near:i=.1,far:n=100,fov:r=45,aspect:s=1,left:a,right:h,bottom:l,top:c,zoom:o=1}={}){super(),Object.assign(this,{near:i,far:n,fov:r,aspect:s,left:a,right:h,bottom:l,top:c,zoom:o}),this.projectionMatrix=new s0,this.viewMatrix=new s0,this.projectionViewMatrix=new s0,this.worldPosition=new R,this.type=a||h?"orthographic":"perspective",this.type==="orthographic"?this.orthographic():this.perspective()}perspective({near:t=this.near,far:i=this.far,fov:n=this.fov,aspect:r=this.aspect}={}){return Object.assign(this,{near:t,far:i,fov:n,aspect:r}),this.projectionMatrix.fromPerspective({fov:n*(Math.PI/180),aspect:r,near:t,far:i}),this.type="perspective",this}orthographic({near:t=this.near,far:i=this.far,left:n=this.left||-1,right:r=this.right||1,bottom:s=this.bottom||-1,top:a=this.top||1,zoom:h=this.zoom}={}){return Object.assign(this,{near:t,far:i,left:n,right:r,bottom:s,top:a,zoom:h}),n/=h,r/=h,s/=h,a/=h,this.projectionMatrix.fromOrthogonal({left:n,right:r,bottom:s,top:a,near:t,far:i}),this.type="orthographic",this}updateMatrixWorld(){return super.updateMatrixWorld(),this.viewMatrix.inverse(this.worldMatrix),this.worldMatrix.getTranslation(this.worldPosition),this.projectionViewMatrix.multiply(this.projectionMatrix,this.viewMatrix),this}lookAt(t){return super.lookAt(t,!0),this}project(t){return t.applyMatrix4(this.viewMatrix),t.applyMatrix4(this.projectionMatrix),this}unproject(t){return t.applyMatrix4(G1.inverse(this.projectionMatrix)),t.applyMatrix4(this.worldMatrix),this}updateFrustum(){this.frustum||(this.frustum=[new R,new R,new R,new R,new R,new R]);const t=this.projectionViewMatrix;this.frustum[0].set(t[3]-t[0],t[7]-t[4],t[11]-t[8]).constant=t[15]-t[12],this.frustum[1].set(t[3]+t[0],t[7]+t[4],t[11]+t[8]).constant=t[15]+t[12],this.frustum[2].set(t[3]+t[1],t[7]+t[5],t[11]+t[9]).constant=t[15]+t[13],this.frustum[3].set(t[3]-t[1],t[7]-t[5],t[11]-t[9]).constant=t[15]-t[13],this.frustum[4].set(t[3]-t[2],t[7]-t[6],t[11]-t[10]).constant=t[15]-t[14],this.frustum[5].set(t[3]+t[2],t[7]+t[6],t[11]+t[10]).constant=t[15]+t[14];for(let i=0;i<6;i++){const n=1/this.frustum[i].distance();this.frustum[i].multiply(n),this.frustum[i].constant*=n}}frustumIntersectsMesh(t,i=t.worldMatrix){if(!t.geometry.attributes.position||((!t.geometry.bounds||t.geometry.bounds.radius===1/0)&&t.geometry.computeBoundingSphere(),!t.geometry.bounds))return!0;const n=X1;n.copy(t.geometry.bounds.center),n.applyMatrix4(i);const r=t.geometry.bounds.radius*i.getMaxScaleOnAxis();return this.frustumIntersectsSphere(n,r)}frustumIntersectsSphere(t,i){const n=j1;for(let r=0;r<6;r++){const s=this.frustum[r];if(n.copy(s).dot(t)+s.constant<-i)return!1}return!0}}function Q1(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[4],e[4]=t[5],e[5]=t[6],e[6]=t[8],e[7]=t[9],e[8]=t[10],e}function K1(e,t){let i=t[0],n=t[1],r=t[2],s=t[3],a=i+i,h=n+n,l=r+r,c=i*a,o=n*a,d=n*h,u=r*a,f=r*h,g=r*l,p=s*a,m=s*h,w=s*l;return e[0]=1-d-g,e[3]=o-w,e[6]=u+m,e[1]=o+w,e[4]=1-c-g,e[7]=f-p,e[2]=u-m,e[5]=f+p,e[8]=1-c-d,e}function J1(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e}function ti(e,t,i,n,r,s,a,h,l,c){return e[0]=t,e[1]=i,e[2]=n,e[3]=r,e[4]=s,e[5]=a,e[6]=h,e[7]=l,e[8]=c,e}function ei(e){return e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=1,e[5]=0,e[6]=0,e[7]=0,e[8]=1,e}function ii(e,t){let i=t[0],n=t[1],r=t[2],s=t[3],a=t[4],h=t[5],l=t[6],c=t[7],o=t[8],d=o*a-h*c,u=-o*s+h*l,f=c*s-a*l,g=i*d+n*u+r*f;return g?(g=1/g,e[0]=d*g,e[1]=(-o*n+r*c)*g,e[2]=(h*n-r*a)*g,e[3]=u*g,e[4]=(o*i-r*l)*g,e[5]=(-h*i+r*s)*g,e[6]=f*g,e[7]=(-c*i+n*l)*g,e[8]=(a*i-n*s)*g,e):null}function Ot(e,t,i){let n=t[0],r=t[1],s=t[2],a=t[3],h=t[4],l=t[5],c=t[6],o=t[7],d=t[8],u=i[0],f=i[1],g=i[2],p=i[3],m=i[4],w=i[5],C=i[6],A=i[7],_=i[8];return e[0]=u*n+f*a+g*c,e[1]=u*r+f*h+g*o,e[2]=u*s+f*l+g*d,e[3]=p*n+m*a+w*c,e[4]=p*r+m*h+w*o,e[5]=p*s+m*l+w*d,e[6]=C*n+A*a+_*c,e[7]=C*r+A*h+_*o,e[8]=C*s+A*l+_*d,e}function ni(e,t,i){let n=t[0],r=t[1],s=t[2],a=t[3],h=t[4],l=t[5],c=t[6],o=t[7],d=t[8],u=i[0],f=i[1];return e[0]=n,e[1]=r,e[2]=s,e[3]=a,e[4]=h,e[5]=l,e[6]=u*n+f*a+c,e[7]=u*r+f*h+o,e[8]=u*s+f*l+d,e}function ri(e,t,i){let n=t[0],r=t[1],s=t[2],a=t[3],h=t[4],l=t[5],c=t[6],o=t[7],d=t[8],u=Math.sin(i),f=Math.cos(i);return e[0]=f*n+u*a,e[1]=f*r+u*h,e[2]=f*s+u*l,e[3]=f*a-u*n,e[4]=f*h-u*r,e[5]=f*l-u*s,e[6]=c,e[7]=o,e[8]=d,e}function si(e,t,i){let n=i[0],r=i[1];return e[0]=n*t[0],e[1]=n*t[1],e[2]=n*t[2],e[3]=r*t[3],e[4]=r*t[4],e[5]=r*t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e}function ai(e,t){let i=t[0],n=t[1],r=t[2],s=t[3],a=t[4],h=t[5],l=t[6],c=t[7],o=t[8],d=t[9],u=t[10],f=t[11],g=t[12],p=t[13],m=t[14],w=t[15],C=i*h-n*a,A=i*l-r*a,_=i*c-s*a,E=n*l-r*h,b=n*c-s*h,U=r*c-s*l,O=o*p-d*g,T=o*m-u*g,B=o*w-f*g,N=d*m-u*p,P=d*w-f*p,L=u*w-f*m,z=C*L-A*P+_*N+E*B-b*T+U*O;return z?(z=1/z,e[0]=(h*L-l*P+c*N)*z,e[1]=(l*B-a*L-c*T)*z,e[2]=(a*P-h*B+c*O)*z,e[3]=(r*P-n*L-s*N)*z,e[4]=(i*L-r*B+s*T)*z,e[5]=(n*B-i*P-s*O)*z,e[6]=(p*U-m*b+w*E)*z,e[7]=(m*_-g*U-w*A)*z,e[8]=(g*b-p*_+w*C)*z,e):null}class li extends Array{constructor(t=1,i=0,n=0,r=0,s=1,a=0,h=0,l=0,c=1){return super(t,i,n,r,s,a,h,l,c),this}set(t,i,n,r,s,a,h,l,c){return t.length?this.copy(t):(ti(this,t,i,n,r,s,a,h,l,c),this)}translate(t,i=this){return ni(this,i,t),this}rotate(t,i=this){return ri(this,i,t),this}scale(t,i=this){return si(this,i,t),this}multiply(t,i){return i?Ot(this,t,i):Ot(this,this,t),this}identity(){return ei(this),this}copy(t){return J1(this,t),this}fromMatrix4(t){return Q1(this,t),this}fromQuaternion(t){return K1(this,t),this}fromBasis(t,i,n){return this.set(t[0],t[1],t[2],i[0],i[1],i[2],n[0],n[1],n[2]),this}inverse(t=this){return ii(this,t),this}getNormalMatrix(t){return ai(this,t),this}}let hi=0;class Pt extends ft{constructor(t,{geometry:i,program:n,mode:r=t.TRIANGLES,frustumCulled:s=!0,renderOrder:a=0}={}){super(),t.canvas||console.error("gl not passed as first argument to Mesh"),this.gl=t,this.id=hi++,this.geometry=i,this.program=n,this.mode=r,this.frustumCulled=s,this.renderOrder=a,this.modelViewMatrix=new s0,this.normalMatrix=new li,this.beforeRenderCallbacks=[],this.afterRenderCallbacks=[]}onBeforeRender(t){return this.beforeRenderCallbacks.push(t),this}onAfterRender(t){return this.afterRenderCallbacks.push(t),this}draw({camera:t}={}){t&&(this.program.uniforms.modelMatrix||Object.assign(this.program.uniforms,{modelMatrix:{value:null},viewMatrix:{value:null},modelViewMatrix:{value:null},normalMatrix:{value:null},projectionMatrix:{value:null},cameraPosition:{value:null}}),this.program.uniforms.projectionMatrix.value=t.projectionMatrix,this.program.uniforms.cameraPosition.value=t.worldPosition,this.program.uniforms.viewMatrix.value=t.viewMatrix,this.modelViewMatrix.multiply(t.viewMatrix,this.worldMatrix),this.normalMatrix.getNormalMatrix(this.modelViewMatrix),this.program.uniforms.modelMatrix.value=this.worldMatrix,this.program.uniforms.modelViewMatrix.value=this.modelViewMatrix,this.program.uniforms.normalMatrix.value=this.normalMatrix),this.beforeRenderCallbacks.forEach(n=>n&&n({mesh:this,camera:t}));let i=this.program.cullFace&&this.worldMatrix.determinant()<0;this.program.use({flipFaces:i}),this.geometry.draw({mode:this.mode,program:this.program}),this.afterRenderCallbacks.forEach(n=>n&&n({mesh:this,camera:t}))}}function oi(e,t){return e[0]=t[0],e[1]=t[1],e}function ci(e,t,i){return e[0]=t,e[1]=i,e}function Bt(e,t,i){return e[0]=t[0]+i[0],e[1]=t[1]+i[1],e}function Nt(e,t,i){return e[0]=t[0]-i[0],e[1]=t[1]-i[1],e}function di(e,t,i){return e[0]=t[0]*i[0],e[1]=t[1]*i[1],e}function fi(e,t,i){return e[0]=t[0]/i[0],e[1]=t[1]/i[1],e}function it(e,t,i){return e[0]=t[0]*i,e[1]=t[1]*i,e}function ui(e,t){var i=t[0]-e[0],n=t[1]-e[1];return Math.sqrt(i*i+n*n)}function gi(e,t){var i=t[0]-e[0],n=t[1]-e[1];return i*i+n*n}function Ft(e){var t=e[0],i=e[1];return Math.sqrt(t*t+i*i)}function pi(e){var t=e[0],i=e[1];return t*t+i*i}function mi(e,t){return e[0]=-t[0],e[1]=-t[1],e}function yi(e,t){return e[0]=1/t[0],e[1]=1/t[1],e}function vi(e,t){var i=t[0],n=t[1],r=i*i+n*n;return r>0&&(r=1/Math.sqrt(r)),e[0]=t[0]*r,e[1]=t[1]*r,e}function wi(e,t){return e[0]*t[0]+e[1]*t[1]}function Dt(e,t){return e[0]*t[1]-e[1]*t[0]}function xi(e,t,i,n){var r=t[0],s=t[1];return e[0]=r+n*(i[0]-r),e[1]=s+n*(i[1]-s),e}function Mi(e,t,i){var n=t[0],r=t[1];return e[0]=i[0]*n+i[3]*r+i[6],e[1]=i[1]*n+i[4]*r+i[7],e}function Ai(e,t,i){let n=t[0],r=t[1];return e[0]=i[0]*n+i[4]*r+i[12],e[1]=i[1]*n+i[5]*r+i[13],e}function bi(e,t){return e[0]===t[0]&&e[1]===t[1]}class u0 extends Array{constructor(t=0,i=t){return super(t,i),this}get x(){return this[0]}get y(){return this[1]}set x(t){this[0]=t}set y(t){this[1]=t}set(t,i=t){return t.length?this.copy(t):(ci(this,t,i),this)}copy(t){return oi(this,t),this}add(t,i){return i?Bt(this,t,i):Bt(this,this,t),this}sub(t,i){return i?Nt(this,t,i):Nt(this,this,t),this}multiply(t){return t.length?di(this,this,t):it(this,this,t),this}divide(t){return t.length?fi(this,this,t):it(this,this,1/t),this}inverse(t=this){return yi(this,t),this}len(){return Ft(this)}distance(t){return t?ui(this,t):Ft(this)}squaredLen(){return this.squaredDistance()}squaredDistance(t){return t?gi(this,t):pi(this)}negate(t=this){return mi(this,t),this}cross(t,i){return i?Dt(t,i):Dt(this,t)}scale(t){return it(this,this,t),this}normalize(){return vi(this,this),this}dot(t){return wi(this,t)}equals(t){return bi(this,t)}applyMatrix3(t){return Mi(this,this,t),this}applyMatrix4(t){return Ai(this,this,t),this}lerp(t,i){return xi(this,this,t,i),this}clone(){return new u0(this[0],this[1])}fromArray(t,i=0){return this[0]=t[i],this[1]=t[i+1],this}toArray(t=[],i=0){return t[i]=this[0],t[i+1]=this[1],t}}const Y={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,DOLLY_PAN:3},a0=new R,j=new u0,i0=new u0;function Si(e,{element:t=document,enabled:i=!0,target:n=new R,ease:r=.25,inertia:s=.85,enableRotate:a=!0,rotateSpeed:h=.1,autoRotate:l=!1,autoRotateSpeed:c=1,enableZoom:o=!0,zoomSpeed:d=1,zoomStyle:u="dolly",enablePan:f=!0,panSpeed:g=.1,minPolarAngle:p=0,maxPolarAngle:m=Math.PI,minAzimuthAngle:w=-1/0,maxAzimuthAngle:C=1/0,minDistance:A=0,maxDistance:_=1/0}={}){this.enabled=i,this.target=n,this.zoomStyle=u,r=r||1,s=s||0,this.minDistance=A,this.maxDistance=_;const E={radius:1,phi:0,theta:0},b={radius:1,phi:0,theta:0},U={radius:1,phi:0,theta:0},O=new R,T=new R;T.copy(e.position).sub(this.target),U.radius=b.radius=T.distance(),U.theta=b.theta=Math.atan2(T.x,T.z),U.phi=b.phi=Math.acos(Math.min(Math.max(T.y/b.radius,-1),1)),this.offset=T,this.update=()=>{l&&L0(),b.radius*=E.radius,b.theta+=E.theta,b.phi+=E.phi,b.theta=Math.max(w,Math.min(C,b.theta)),b.phi=Math.max(p,Math.min(m,b.phi)),b.radius=Math.max(this.minDistance,Math.min(this.maxDistance,b.radius)),U.phi+=(b.phi-U.phi)*r,U.theta+=(b.theta-U.theta)*r,U.radius+=(b.radius-U.radius)*r,this.target.add(O);let v=U.radius*Math.sin(Math.max(1e-6,U.phi));T.x=v*Math.sin(U.theta),T.y=U.radius*Math.cos(U.phi),T.z=v*Math.cos(U.theta),e.position.copy(this.target).add(T),e.lookAt(this.target),E.theta*=s,E.phi*=s,O.multiply(s),E.radius=1},this.forcePosition=()=>{T.copy(e.position).sub(this.target),U.radius=b.radius=T.distance(),U.theta=b.theta=Math.atan2(T.x,T.z),U.phi=b.phi=Math.acos(Math.min(Math.max(T.y/b.radius,-1),1)),e.lookAt(this.target)};const B=new u0,N=new u0,P=new u0;let L=Y.NONE;this.mouseButtons={ORBIT:0,ZOOM:1,PAN:2};function z(){return Math.pow(.95,d)}function G(v,I){a0.set(I[0],I[1],I[2]),a0.multiply(-v),O.add(a0)}function U0(v,I){a0.set(I[4],I[5],I[6]),a0.multiply(v),O.add(a0)}const T0=(v,I)=>{let q=t===document?document.body:t;a0.copy(e.position).sub(this.target);let X=a0.distance();X*=Math.tan((e.fov||45)/2*Math.PI/180),G(2*v*X/q.clientHeight,e.matrix),U0(2*I*X/q.clientHeight,e.matrix)},h0=v=>{this.zoomStyle==="dolly"?E.radius/=v:(e.fov/=v,e.type==="orthographic"?e.orthographic():e.perspective())};function L0(){const v=2*Math.PI/60/60*c;E.theta-=v}function I0(v,I){j.set(v,I),i0.sub(j,B).multiply(h);let q=t===document?document.body:t;E.theta-=2*Math.PI*i0.x/q.clientHeight,E.phi-=2*Math.PI*i0.y/q.clientHeight,B.copy(j)}function R0(v){j.set(v.clientX,v.clientY),i0.sub(j,P),i0.y>0?h0(z()):i0.y<0&&h0(1/z()),P.copy(j)}function O0(v,I){j.set(v,I),i0.sub(j,N).multiply(g),T0(i0.x,i0.y),N.copy(j)}function X0(v){if(o){let I=v.touches[0].pageX-v.touches[1].pageX,q=v.touches[0].pageY-v.touches[1].pageY,X=Math.sqrt(I*I+q*q);P.set(0,X)}if(f){let I=.5*(v.touches[0].pageX+v.touches[1].pageX),q=.5*(v.touches[0].pageY+v.touches[1].pageY);N.set(I,q)}}function n0(v){if(o){let I=v.touches[0].pageX-v.touches[1].pageX,q=v.touches[0].pageY-v.touches[1].pageY,X=Math.sqrt(I*I+q*q);j.set(0,X),i0.set(0,Math.pow(j.y/P.y,d)),h0(i0.y),P.copy(j)}if(f){let I=.5*(v.touches[0].pageX+v.touches[1].pageX),q=.5*(v.touches[0].pageY+v.touches[1].pageY);O0(I,q)}}const y0=v=>{if(this.enabled){switch(v.button){case this.mouseButtons.ORBIT:if(a===!1)return;B.set(v.clientX,v.clientY),L=Y.ROTATE;break;case this.mouseButtons.ZOOM:if(o===!1)return;P.set(v.clientX,v.clientY),L=Y.DOLLY;break;case this.mouseButtons.PAN:if(f===!1)return;N.set(v.clientX,v.clientY),L=Y.PAN;break}L!==Y.NONE&&(window.addEventListener("mousemove",v0,!1),window.addEventListener("mouseup",w0,!1))}},v0=v=>{if(this.enabled)switch(L){case Y.ROTATE:if(a===!1)return;I0(v.clientX,v.clientY);break;case Y.DOLLY:if(o===!1)return;R0(v);break;case Y.PAN:if(f===!1)return;O0(v.clientX,v.clientY);break}},w0=()=>{window.removeEventListener("mousemove",v0,!1),window.removeEventListener("mouseup",w0,!1),L=Y.NONE},S=v=>{!this.enabled||!o||L!==Y.NONE&&L!==Y.ROTATE||(v.stopPropagation(),v.preventDefault(),v.deltaY<0?h0(1/z()):v.deltaY>0&&h0(z()))},y=v=>{if(this.enabled)switch(v.preventDefault(),v.touches.length){case 1:if(a===!1)return;B.set(v.touches[0].pageX,v.touches[0].pageY),L=Y.ROTATE;break;case 2:if(o===!1&&f===!1)return;X0(v),L=Y.DOLLY_PAN;break;default:L=Y.NONE}},M=v=>{if(this.enabled)switch(v.preventDefault(),v.stopPropagation(),v.touches.length){case 1:if(a===!1)return;I0(v.touches[0].pageX,v.touches[0].pageY);break;case 2:if(o===!1&&f===!1)return;n0(v);break;default:L=Y.NONE}},$=()=>{this.enabled&&(L=Y.NONE)},D=v=>{this.enabled&&v.preventDefault()};function F(){t.addEventListener("contextmenu",D,!1),t.addEventListener("mousedown",y0,!1),t.addEventListener("wheel",S,{passive:!1}),t.addEventListener("touchstart",y,{passive:!1}),t.addEventListener("touchend",$,!1),t.addEventListener("touchmove",M,{passive:!1})}this.remove=function(){t.removeEventListener("contextmenu",D),t.removeEventListener("mousedown",y0),t.removeEventListener("wheel",S),t.removeEventListener("touchstart",y),t.removeEventListener("touchend",$),t.removeEventListener("touchmove",M),window.removeEventListener("mousemove",v0),window.removeEventListener("mouseup",w0)},F()}function Ei(e,t,i,n,r=.5,s=0){let a=e.distance(t),h=t.distance(i),l=i.distance(n);const c=(1-s)*(i[0]-t[0]+h*((t[0]-e[0])/a-(i[0]-e[0])/(a+h))),o=(1-s)*(i[1]-t[1]+h*((t[1]-e[1])/a-(i[1]-e[1])/(a+h))),d=(1-s)*(i[2]-t[2]+h*((t[2]-e[2])/a-(i[2]-e[2])/(a+h))),u=(1-s)*(i[0]-t[0]+h*((n[0]-i[0])/l-(n[0]-t[0])/(h+l))),f=(1-s)*(i[1]-t[1]+h*((n[1]-i[1])/l-(n[1]-t[1])/(h+l))),g=(1-s)*(i[2]-t[2]+h*((n[2]-i[2])/l-(n[2]-t[2])/(h+l))),p=new R(c,o,d),m=new R(u,f,g);return{a:t.clone().sub(i).multiply(2).add(p).add(m),b:t.clone().sub(i).multiply(-3).sub(p).sub(p).sub(m),c:p.clone(),d:t.clone()}}function _i(e,t){return e.a.clone().multiply(t*t*t).add(e.b.clone().multiply(t*t)).add(e.c.clone().multiply(t)).add(e.d.clone())}function le(e,t=3,i=.5){let n=[];for(let r=0;r<e.length-9;r+=3){let s=new R(e[r+0],e[r+1],e[r+2]),a=new R(e[r+3],e[r+4],e[r+5]),h=new R(e[r+6],e[r+7],e[r+8]),l=new R(e[r+9],e[r+10],e[r+11]);const c=Ei(s,a,h,l,0,i);for(let o=0;o<1;o+=1/t)n.push(_i(c,o))}return n.map(r=>r.toArray()).flat()}let V,at,D0,c0,N0,lt=[],q0=[],$i=[];const Ci=`
precision highp float;
// position in the instance geometry
attribute vec2 position;

// two endpoints of a yarn segment
attribute vec3 pointA;
attribute vec3 pointB;

uniform mat4 modelMatrix;
uniform mat4 modelViewMatrix;
uniform mat4 projectionMatrix;
uniform mat4 uInverseModelViewMatrix;

//uniform mat4 shadowViewMatrix;
//uniform mat4 shadowProjectionMatrix;


uniform float uWidth;

varying float across;
//varying vec4 vLightNDC;

// Matrix to shift range from -1->1 to 0->1
const mat4 depthScaleMatrix = mat4(
    0.5, 0, 0, 0,
    0, 0.5, 0, 0,
    0, 0, 0.5, 0,
    0.5, 0.5, 0.5, 1
);

void main() {
  // The segment endpoint positions in model view space
  vec4 p0 = modelViewMatrix * vec4(pointA, 1.0);
  vec4 p1 = modelViewMatrix * vec4(pointB, 1.0);

  // This is our position in the instance geometry. the x component is along the line segment
  vec2 tangent = p1.xy - p0.xy;
  vec2 normal =   normalize(vec2(-tangent.y, tangent.x)); // perp

  vec4 currentPoint = mix(p0, p1, position.x);
  vec2 pt = currentPoint.xy + uWidth *(position.x * tangent +  position.y * normal);

  vec4 mvPosition = vec4(pt, currentPoint.z, 1.0);

  gl_Position = projectionMatrix * mvPosition;

  vec4 undo = uInverseModelViewMatrix * mvPosition;

  across = position.y;


  // Calculate the NDC (normalized device coords) for the light to compare against shadowmap
  //vLightNDC = depthScaleMatrix * shadowProjectionMatrix * shadowViewMatrix * modelMatrix * undo;
}
`,qt=`
precision highp float;

uniform float uWidth;
uniform vec3 uColor;
//uniform sampler2D tShadow;

varying float across;
//varying vec4 vLightNDC;

float unpackRGBA (vec4 v) {
    return dot(v, 1.0 / vec4(1.0, 255.0, 65025.0, 16581375.0));
}

vec3 normal = vec3(0.0, 0.0, 1.0);


void main() {
    //vec3 lightPos = vLightNDC.xyz / vLightNDC.w;
    //float bias = 0.0001;
   // float depth = lightPos.z - bias;
    //float occluder = unpackRGBA(texture2D(tShadow, lightPos.xy));
   // float shadow = mix(0.6, 1.0, step(depth, occluder));

    vec3 highlight = normalize(vec3(0.0, across*2., 0.35));
    float outline = dot(normal, highlight);
    outline = step(0.4, outline);

    gl_FragColor.rgb = uColor * outline;// * shadow;
    gl_FragColor.a = 1.0;
}
`,zi=`
precision highp float;

attribute vec3 position;
attribute vec3 pointA;
attribute vec3 pointB;
attribute vec3 pointC;

uniform float uWidth;

uniform mat4 modelMatrix;
uniform mat4 modelViewMatrix;
uniform mat4 projectionMatrix;
uniform mat4 uInverseModelViewMatrix;

//uniform mat4 shadowViewMatrix;
//uniform mat4 shadowProjectionMatrix;


varying float across;
varying vec4 vLightNDC;


// Matrix to shift range from -1->1 to 0->1
const mat4 depthScaleMatrix = mat4(
    0.5, 0, 0, 0,
    0, 0.5, 0, 0,
    0, 0, 0.5, 0,
    0.5, 0.5, 0.5, 1
);

void main() {
  mat4 mvp = projectionMatrix * modelViewMatrix;

  vec4 clipA = modelViewMatrix * vec4(pointA, 1.0);
  vec4 clipB = modelViewMatrix * vec4(pointB, 1.0);
  vec4 clipC = modelViewMatrix * vec4(pointC, 1.0);

  // Calculate the normal to the join tangent
  vec2 tangent = normalize(normalize(clipC.xy - clipB.xy) + normalize(clipB.xy - clipA.xy));
  vec2 normal = vec2(-tangent.y, tangent.x);

  vec2 ab = clipB.xy - clipA.xy;
  vec2 cb = clipB.xy - clipC.xy;

  vec2 abn = normalize(vec2(-ab.y, ab.x));
  vec2 cbn = -normalize(vec2(-cb.y, cb.x));

  float sigma = sign(dot(ab + cb, normal)); // Direction of the bend

  // Basis vectors for the bevel geometry
  vec2 p0 = 0.5 * sigma * uWidth * (sigma < 0.0 ? abn : cbn);
  vec2 p1 = 0.5 * sigma * uWidth * (sigma < 0.0 ? cbn : abn);


  // Final vertex position coefficients ([0,0], [0,1], [1,0])
  vec2 clip = clipB.xy + position.x * p0 + position.y * p1;


  vec4 mvPosition = vec4(clip, clipB.z, clipB.w);

  gl_Position = projectionMatrix * mvPosition;

  vec4 undo = uInverseModelViewMatrix * mvPosition;

  across = (position.x + position.y) * 0.5 * sigma;
    // Calculate the NDC (normalized device coords) for the light to compare against shadowmap
  //vLightNDC = depthScaleMatrix * shadowProjectionMatrix * shadowViewMatrix * modelMatrix * undo;
}
`;function Ui(e){let t=1/0,i=-1/0,n=1/0,r=-1/0,s=1/0,a=-1/0;for(let o=0;o<e.length;o+=3)t=Math.min(e[o],t),i=Math.max(e[o],i),n=Math.min(e[o+1],n),r=Math.max(e[o+1],r),s=Math.min(e[o+2],s),a=Math.max(e[o+2],a);let h=Math.abs(i-t),l=Math.abs(r-n),c=Math.abs(a-s);return{xMin:t,xMax:i,yMin:n,yMax:r,zMin:s,zMax:a,dimensions:[h,l,c],center:[t+h/2,n+l/2,s+c/2]}}function Ti(e,t){const i=e.length/3-1,n=[[0,-.5],[1,-.5],[0,.5],[1,.5]],r=new ne(V,{position:{size:2,data:new Float32Array(n.flat()),instanced:0},pointA:{data:e,buffer:t,instanced:1,count:i,size:3,offset:Float32Array.BYTES_PER_ELEMENT*0},pointB:{data:e,buffer:t,instanced:1,count:i,size:3,offset:Float32Array.BYTES_PER_ELEMENT*3}});return r.setDrawRange(0,n.length),r.setInstancedCount(i),r}function Li(e,t){const i=e.length/3-2,n=[[0,0],[1,0],[0,1]],r=new ne(V,{position:{size:2,data:new Float32Array(n.flat()),instanced:0},pointA:{data:e,buffer:t,instanced:1,count:i,size:3,offset:Float32Array.BYTES_PER_ELEMENT*0},pointB:{data:e,buffer:t,instanced:1,count:i,size:3,offset:Float32Array.BYTES_PER_ELEMENT*3},pointC:{data:e,buffer:t,instanced:1,count:i,size:3,offset:Float32Array.BYTES_PER_ELEMENT*6}});return r.setDrawRange(0,n.length),r.setInstancedCount(i),r}function Ii(e,t){D0=new h1({dpr:2,canvas:t,width:t.parentNode.clientWidth,height:t.parentNode.clientHeight}),V=D0.gl,V.clearColor(.1,.1,.1,1);let i=Ui(e[0].pts);c0||(c0=new Z1(V,{fov:60,far:300,near:.1}),c0.position.set(i.center[0],i.center[1],15),at=new Si(c0,{target:new R(i.center[0],i.center[1],0),element:t}),c0.lookAt(at.target)),N0=new ft,lt=[],q0=[],e.forEach(n=>{if(n.pts.length<6)return;const r=new Float32Array(le(n.pts,5,0));lt.push(r);const s=V.createBuffer();V.bindBuffer(V.ARRAY_BUFFER,s),V.bufferData(V.ARRAY_BUFFER,r,V.STATIC_DRAW);const a=Ti(r,s),h=Li(r,s);q0.push(a),$i.push(n.color);const l=new $t(V,{vertex:Ci,fragment:qt,cullFace:!1,uniforms:{uWidth:{value:n.diameter},uColor:{value:n.color},uInverseModelViewMatrix:{value:null}}}),c=new $t(V,{vertex:zi,fragment:qt,cullFace:!1,uniforms:{uColor:{value:n.color},uWidth:{value:n.diameter},uInverseModelViewMatrix:{value:null}}}),o=new Pt(V,{mode:V.TRIANGLE_STRIP,geometry:a,program:l}),d=new Pt(V,{geometry:h,program:c});function u({mesh:f}){let g=new s0;g.inverse(f.modelViewMatrix),f.program.uniforms.uInverseModelViewMatrix.value=g}o.onBeforeRender(u),d.onBeforeRender(u),o.setParent(N0),d.setParent(N0)})}function Ri(e){e.forEach((t,i)=>{le(t.pts,4).forEach((r,s)=>lt[i][s]=r),q0[i].attributes.pointA.needsUpdate=!0,q0[i].attributes.pointB.needsUpdate=!0})}function Oi(){D0.setSize(V.canvas.parentNode.clientWidth,V.canvas.parentNode.clientHeight),c0.perspective({aspect:V.canvas.clientWidth/V.canvas.clientHeight}),at.update(),D0.render({scene:N0,camera:c0})}const Vt={draw:Oi,init:Ii,updateYarnGeometry:Ri};function Pi(e){return e.sort(()=>Math.random()>.5?1:-1)}function he(){const e="0123456789ABCDEF";let t="#";for(let i=0;i<6;i++)t+=e[Math.floor(Math.random()*16)];return t}function Bi(e){e=e.length>7?e.slice(0,7):e;var t=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(e);return t?[parseInt(t[1],16),parseInt(t[2],16),parseInt(t[3],16)]:[0,0,0]}const oe=1,V0=oe/2,Ni=1,kt=oe*Ni;function Fi(e,t){const i=[];for(let n=0;n<t;n++)for(let r=0;r<e;r++)i.push({pos:[r*kt,(t-n)*kt,0],f:[0,0],v:[0,0]});return i}function Di(e,t,i){const n=[],r=t[0].length,s=t.length,[a,h,l]=i[e].pos;n.push(a,h+2,l),n.push(a,h+1,l);for(let u=0;u<s;u++){const[f,g,p]=i[r*u+e].pos;t[u][e]==1?n.push(f,g,p-V0):n.push(f,g,p+V0)}const[c,o,d]=i[r*(s-1)+e].pos;return n.push(c,o-1,d),n.push(c,o-2,d),n}function qi(e,t,i){const n=[],r=t[0].length,[s,a,h]=i[r*e].pos;n.push(s-2,a,h),n.push(s-1,a,h);for(let d=0;d<r;d++){const[u,f,g]=i[r*e+d].pos;t[e][d]==0?n.push(u,f,g-V0):n.push(u,f,g+V0)}const[l,c,o]=i[r*e+r-1].pos;return n.push(l+1,c,o),n.push(l+2,c,o),n}function Vi(){const{cellSize:e}=x,t=document.getElementById("drawdown"),i=document.getElementById("drawdown-container");return[Math.max(t.width/e,Math.floor(i.offsetWidth/e)-1),Math.max(t.height/e,Math.floor(i.offsetHeight/e)-1)]}function Wt(e,t){let i=[],n=0;for(;i.length<t;)i.push(e[n]),n=(n+1)%e.length;return i}function ki(){const{draft:e,cellSize:t}=x,i=Vi(),n=e.drawdown.length,r=e.drawdown[0].length;let s=[];for(let l=0;l<i[1];l++){const c=Array(i[0]);for(let o=0;o<i[0];o++)c[i[0]-1-o]=e.drawdown[l%n][r-1-o%r];s.push(c)}const a=Wt(e.warpColorSequence.toReversed(),i[0]).toReversed(),h=Wt(e.weftColorSequence,i[1]);return{swatch:s,warp:a,weft:h}}function ce(e,t){x.stopSim&&(x.stopSim(),x.stopSim=null);const i=x.yarnPalette.map(g=>{let[p,m,w]=Bi(g);return[p/255,m/255,w/255]}),n=parseFloat(document.getElementById("input-yarn-diameter").value),{swatch:r,warp:s,weft:a}=ki(),h=Fi(r[0].length,r.length),l=s.map((g,p)=>Di(p,r,h)),c=a.map((g,p)=>qi(p,r,h)),o=[];l.forEach((g,p)=>{const m=s[p];o.push({pts:g,diameter:n,color:i[m]})}),c.forEach((g,p)=>{const m=a[p];o.push({pts:g,diameter:n,color:i[m]})}),Vt.init(o,e);let d=!1;function u(){d||(Vt.draw(),requestAnimationFrame(u))}u();function f(){d=!0}x.stopSim=f}const Yt=[{threading:[[0,0,0,1,0,0,0,1,0,0,0,1],[0,0,1,0,0,0,1,0,0,0,1,0],[0,1,0,0,0,1,0,0,0,1,0,0],[1,0,0,0,1,0,0,0,1,0,0,0]],tieUp:[[0,1],[1,0],[0,1],[1,0]],treadling:[[0,1],[1,0]],id:"1"},{threading:[[0,0,0,1,0,0,0,1,0,0,0,1],[0,0,1,0,0,0,1,0,0,0,1,0],[0,1,0,0,0,1,0,0,0,1,0,0],[1,0,0,0,1,0,0,0,1,0,0,0]],tieUp:[[0,0,0,1],[0,0,1,0],[0,1,0,0],[1,0,0,0]],treadling:[[0,0,0,1],[0,0,1,0],[0,1,0,0],[1,0,0,0]],id:"3"},{threading:[[0,0,0,1,0,0,0,1,0,0,0,1],[0,0,1,0,0,0,1,0,0,0,1,0],[0,1,0,0,0,1,0,0,0,1,0,0],[1,0,0,0,1,0,0,0,1,0,0,0]],tieUp:[[0,0,1],[0,1,0],[1,0,1],[1,1,0]],treadling:[[0,0,1],[1,0,0],[0,1,0],[1,0,0]],id:"4"},{threading:[[0,0,0,1,0,0,0,1,0,0,0,1],[0,0,1,0,0,0,1,0,0,0,1,0],[0,1,0,0,0,1,0,0,0,1,0,0],[1,0,0,0,1,0,0,0,1,0,0,0]],tieUp:[[0,0,1,1],[1,1,0,0],[0,1,1,0],[1,0,0,1]],treadling:[[0,0,0,1],[0,0,1,0],[0,1,0,0],[1,0,0,0]],id:"5"},{threading:[[0,0,0,1,0,0,0,1,0,0,0,1],[0,0,1,0,0,0,1,0,0,0,1,0],[0,1,0,0,0,1,0,0,0,1,0,0],[1,0,0,0,1,0,0,0,1,0,0,0]],tieUp:[[1,0,0,1],[1,0,1,0],[0,1,0,1],[0,1,1,0]],treadling:[[0,0,0,1],[0,0,1,0],[0,1,0,0],[1,0,0,0]],id:"6"},{threading:[[0,0,0,1,0,0,0,1,0,0,0,1],[0,0,1,0,0,0,1,0,0,0,1,0],[0,1,0,0,0,1,0,0,0,1,0,0],[1,0,0,0,1,0,0,0,1,0,0,0]],tieUp:[[1,1,1,0],[0,1,0,1],[1,0,1,0],[0,1,1,1]],treadling:[[0,0,0,1],[0,0,1,0],[0,1,0,0],[1,0,0,0]],id:"8"},{threading:[[0,0,0,0,0,1,0,1],[0,0,0,0,1,0,1,0],[0,1,0,1,0,0,0,0],[1,0,1,0,0,0,0,0]],tieUp:[[1,1,0,0],[1,0,1,0],[0,1,0,1],[0,0,1,1]],treadling:[[0,0,0,1],[0,0,1,0],[0,0,0,1],[0,0,1,0],[0,1,0,0],[1,0,0,0],[0,1,0,0],[1,0,0,0],[0,0,0,0]],id:"9"},{threading:[[0,0,0,1,0,0,0,1,0,0,0,1],[0,0,1,0,0,0,1,0,0,0,1,0],[0,1,0,0,0,1,0,0,0,1,0,0],[1,0,0,0,1,0,0,0,1,0,0,0]],tieUp:[[0,0,0,1],[0,1,0,0],[0,0,1,0],[1,0,0,0]],treadling:[[0,0,0,1],[0,0,1,0],[0,1,0,0],[1,0,0,0]],id:"10"},{threading:[[0,0,0,0,0,1,0,1],[0,0,0,0,1,0,1,0],[0,1,0,1,0,0,0,0],[1,0,1,0,0,0,0,0]],tieUp:[[1,1,0,0],[1,0,1,0],[0,1,0,1],[0,0,1,1]],treadling:[[0,0,1,0],[0,1,0,0],[0,0,1,0],[0,1,0,0],[0,0,0,1],[0,0,1,0],[0,0,0,1],[0,1,0,0],[0,0,0,1],[0,0,1,0],[0,1,0,0],[0,0,1,0],[0,1,0,0],[1,0,0,0],[0,0,1,0],[1,0,0,0],[0,1,0,0],[1,0,0,0]],id:"11"},{threading:[[0,0,0,0,0,1,0,1],[0,0,0,0,1,0,1,0],[0,1,0,1,0,0,0,0],[1,0,1,0,0,0,0,0]],tieUp:[[0,1,1,0],[0,0,0,1],[1,0,0,1],[0,1,0,0]],treadling:[[0,0,0,1],[0,0,1,0],[0,0,0,1],[0,0,1,0],[0,1,0,0],[1,0,0,0],[0,1,0,0],[1,0,0,0]],id:"12"},{threading:[[0,0,0,0,0,1,0,1],[0,0,0,0,1,0,1,0],[0,1,0,1,0,0,0,0],[1,0,1,0,0,0,0,0]],tieUp:[[1,0,1],[1,1,0],[0,0,1],[0,1,0]],treadling:[[1,0,0],[0,1,0],[0,0,1]],id:"13"},{threading:[[0,0,0,0,0,1,0,1],[0,0,0,0,1,0,1,0],[0,1,0,1,0,0,0,0],[1,0,1,0,0,0,0,0]],tieUp:[[0,0,1,1],[0,1,0,1],[1,1,0,0],[1,0,1,0]],treadling:[[1,0,0,0],[0,1,0,0],[1,0,0,0],[0,0,1,0],[1,0,0,0],[0,1,0,0],[1,0,0,0],[0,1,0,0],[0,0,0,1],[0,0,1,0],[0,0,0,1],[0,0,1,0]],id:"14"},{threading:[[0,0,0,1,0,0,0,1],[0,0,1,0,0,0,1,0],[0,1,0,0,0,1,0,0],[1,0,0,0,1,0,0,0]],tieUp:[[0,0,0,1,0,1],[0,1,0,0,1,0],[0,0,1,0,0,1],[1,0,0,0,1,0]],treadling:[[0,0,0,0,0,1],[0,0,0,0,1,0],[0,0,0,0,0,1],[0,0,0,0,1,0],[0,0,0,1,0,0],[0,0,1,0,0,0],[0,1,0,0,0,0],[1,0,0,0,0,0]],id:"15"},{threading:[[0,0,0,0,1,0],[0,0,0,1,0,1],[0,1,0,0,0,0],[1,0,1,0,0,0]],tieUp:[[0,0,1,1],[0,1,1,0],[1,1,0,0],[1,0,0,1]],treadling:[[0,0,0,1],[0,0,1,0],[0,1,0,0],[1,0,0,0]],id:"16"},{threading:[[0,0,0,0,0,0,0,1,0,1,0,1,0,1],[0,0,0,0,0,0,0,0,1,0,1,0,1,0],[1,0,1,0,1,0,1,0,0,0,0,0,0,0],[0,1,0,1,0,1,0,0,0,0,0,0,0,0]],tieUp:[[0,1,1,0],[1,1,0,1],[1,0,0,1],[0,1,1,1]],treadling:[[0,0,1,0],[0,0,0,1],[0,0,1,0],[0,0,0,1],[0,0,1,0],[0,0,0,1],[0,0,1,0],[1,0,0,0],[0,1,0,0],[1,0,0,0],[0,1,0,0],[1,0,0,0],[0,1,0,0],[1,0,0,0]],id:"17"},{threading:[[1,0,0,1,0,0,0,0],[0,1,0,0,0,0,1,0],[0,0,1,0,0,1,0,0],[0,0,0,0,1,0,0,1]],tieUp:[[1,0,1,0],[0,1,1,0],[1,0,0,1],[0,1,0,1]],treadling:[[0,0,0,1],[0,0,1,0],[0,1,0,0],[1,0,0,0]],id:"18"},{threading:[[0,0,0,1,0,0,0,1],[0,1,0,0,0,0,1,0],[0,0,1,0,0,1,0,0],[1,0,0,0,1,0,0,0]],tieUp:[[1,0,0,1],[1,1,0,0],[0,1,1,0],[0,0,1,1]],treadling:[[0,0,0,1],[0,0,1,0],[0,1,0,0],[1,0,0,0]],id:"19"},{threading:[[0,0,0,1,0,0,0,1,0,0,0,1],[0,0,1,0,0,0,1,0,0,0,1,0],[0,1,0,0,0,1,0,0,0,1,0,0],[1,0,0,0,1,0,0,0,1,0,0,0]],tieUp:[[0,0,0,1,0,1],[0,1,0,0,1,0],[0,0,1,0,0,1],[1,0,0,0,1,0]],treadling:[[0,0,0,0,0,1],[0,0,0,0,1,0],[0,0,0,0,0,1],[0,0,0,0,1,0],[0,0,0,0,0,1],[0,0,0,0,1,0],[0,0,0,0,0,1],[0,0,0,0,1,0],[0,0,0,1,0,0],[0,0,1,0,0,0],[0,1,0,0,0,0],[1,0,0,0,0,0],[0,0,0,1,0,0],[0,0,1,0,0,0],[0,1,0,0,0,0],[1,0,0,0,0,0]],id:"20"},{threading:[[0,1,0,1,0,0,0,0,0,0,0,0,0,1,0,1],[0,0,0,0,0,1,0,1,0,0,0,0,1,0,1,0],[0,0,0,0,1,0,1,0,0,1,0,1,0,0,0,0],[1,0,1,0,0,0,0,0,1,0,1,0,0,0,0,0]],tieUp:[[1,0,0,1],[0,1,0,1],[0,1,1,0],[1,0,1,0]],treadling:[[0,0,0,1],[0,0,1,0],[0,0,0,1],[0,0,1,0],[0,0,0,1],[0,0,1,0],[0,0,0,1],[0,0,1,0],[0,1,0,0],[1,0,0,0],[0,1,0,0],[1,0,0,0],[0,1,0,0],[1,0,0,0],[0,1,0,0],[1,0,0,0]],id:"22"},{threading:[[0,0,0,0,0,1],[1,0,0,0,1,0],[0,1,0,1,0,0],[0,0,1,0,0,0]],tieUp:[[1,1,0,0],[0,1,1,0],[0,0,1,1],[1,0,0,1]],treadling:[[0,0,0,1],[0,0,1,0],[0,1,0,0],[1,0,0,0],[0,1,0,0],[0,0,1,0]],id:"23"},{threading:[[0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,1],[0,0,0,1,0,0,0,1,0,0,1,0,0,0,1,0],[0,1,0,0,1,0,0,0,1,0,0,0,0,1,0,0],[1,0,0,0,0,1,0,0,0,1,0,0,1,0,0,0]],tieUp:[[1,0,0,1],[1,1,0,0],[0,1,1,0],[0,0,1,1]],treadling:[[0,0,0,1],[0,0,1,0],[0,1,0,0],[1,0,0,0]],id:"24"},{threading:[[0,0,0,1,0,1,0,0,0,1,0,1],[0,0,0,0,1,0,0,0,0,0,1,0],[0,1,0,0,0,0,0,1,0,0,0,0],[1,0,1,0,0,0,1,0,1,0,0,0]],tieUp:[[1,0,0,1],[1,1,0,0],[0,1,1,0],[0,0,1,1]],treadling:[[0,0,0,1],[0,0,1,0],[0,0,0,1],[1,0,0,0],[0,1,0,0],[1,0,0,0]],id:"25"},{threading:[[0,0,0,0,0,1,1,0,0,0,0,0,0,1,1,0],[0,0,0,0,1,0,0,1,0,0,0,0,1,0,0,1],[1,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0],[0,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0]],tieUp:[[0,0,1,1],[0,1,0,1],[1,0,1,0],[1,1,0,0]],treadling:[[0,0,1,0],[0,0,0,1],[0,0,0,1],[0,0,1,0],[0,1,0,0],[1,0,0,0],[1,0,0,0],[0,1,0,0]],id:"26"},{threading:[[0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,1],[0,0,0,0,0,0,0,0,1,0,1,0,1,0,1,0],[0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0],[1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0]],tieUp:[[0,1,0,0,0,1],[1,0,0,0,1,0],[0,1,0,1,0,0],[1,0,1,0,0,0]],treadling:[[1,0,0,0,0,0],[0,1,0,0,0,0],[0,0,1,0,0,0],[0,0,0,1,0,0],[0,0,1,0,0,0],[0,0,0,1,0,0],[0,0,1,0,0,0],[0,0,0,1,0,0],[0,0,1,0,0,0],[0,0,0,1,0,0],[1,0,0,0,0,0],[0,1,0,0,0,0],[0,0,0,0,1,0],[0,0,0,0,0,1],[0,0,0,0,1,0],[0,0,0,0,0,1],[0,0,0,0,1,0],[0,0,0,0,0,1],[0,0,0,0,1,0],[0,0,0,0,0,1]],id:"27"},{threading:[[0,0,0,1,0,0,0,1],[0,0,1,0,0,0,1,0],[0,1,0,0,0,1,0,0],[1,0,0,0,1,0,0,0]],tieUp:[[1,0,1,1,1,0,0,0],[0,0,1,0,1,1,1,0],[1,1,1,0,0,0,1,0],[1,0,0,0,1,0,1,1]],treadling:[[0,0,0,0,0,0,0,1],[0,0,0,0,0,0,1,0],[0,0,0,0,0,1,0,0],[0,0,0,0,1,0,0,0],[0,0,0,1,0,0,0,0],[0,0,1,0,0,0,0,0],[0,1,0,0,0,0,0,0],[1,0,0,0,0,0,0,0]],id:"28"},{threading:[[0,0,0,1,0,0,0,0],[0,0,1,0,1,0,0,0],[0,1,0,0,0,1,0,0],[1,0,0,0,0,0,1,0],[0,0,0,0,0,0,0,1]],tieUp:[[1,0,0,0,0],[0,1,0,0,0],[1,0,1,0,0],[1,1,0,1,0],[1,1,1,0,1]],treadling:[[0,0,0,0,1],[0,0,0,1,0],[0,0,1,0,0],[0,1,0,0,0],[1,0,0,0,0],[0,1,0,0,0],[0,0,1,0,0],[0,0,0,1,0]],id:"32"},{threading:[[0,0,0,0,0,1,0,0,0,0,0,1],[0,0,0,0,1,0,0,0,0,0,1,0],[0,0,0,1,0,0,0,0,0,1,0,0],[0,0,1,0,0,0,0,0,1,0,0,0],[0,1,0,0,0,0,0,1,0,0,0,0],[1,0,0,0,0,0,1,0,0,0,0,0]],tieUp:[[0,0,0,1,1,1],[0,0,1,0,1,1],[0,1,1,0,0,1],[1,0,0,1,1,0],[1,1,0,1,0,0],[1,1,1,0,0,0]],treadling:[[0,0,0,0,0,1],[0,0,0,0,1,0],[0,0,0,1,0,0],[0,0,1,0,0,0],[0,1,0,0,0,0],[1,0,0,0,0,0],[0,0,0,0,0,1],[0,0,0,0,1,0],[0,0,0,1,0,0],[0,0,1,0,0,0],[0,1,0,0,0,0],[1,0,0,0,0,0]],id:"33"},{threading:[[0,0,0,0,0,1,0,0,0,0,0,1],[0,0,0,0,1,0,0,0,0,0,1,0],[0,0,0,1,0,0,0,0,0,1,0,0],[0,0,1,0,0,0,0,0,1,0,0,0],[0,1,0,0,0,0,0,1,0,0,0,0],[1,0,0,0,0,0,1,0,0,0,0,0]],tieUp:[[0,1,0,1,0,1],[1,0,0,0,1,0],[0,1,0,0,0,1],[1,0,1,0,0,0],[0,1,0,1,0,0],[1,0,1,0,1,0]],treadling:[[0,0,0,0,0,1],[0,0,0,0,1,0],[0,0,0,1,0,0],[0,0,1,0,0,0],[0,0,0,1,0,0],[0,0,0,0,1,0],[0,0,0,0,0,1],[1,0,0,0,0,0],[0,1,0,0,0,0],[1,0,0,0,0,0],[0,1,0,0,0,0],[1,0,0,0,0,0],[0,1,0,0,0,0],[1,0,0,0,0,0],[0,1,0,0,0,0]],id:"34"},{threading:[[0,0,0,0,0,1,0,0,0,0,0,1],[0,0,0,0,1,0,0,0,0,0,1,0],[0,0,0,1,0,0,0,0,0,1,0,0],[0,0,1,0,0,0,0,0,1,0,0,0],[0,1,0,0,0,0,0,1,0,0,0,0],[1,0,0,0,0,0,1,0,0,0,0,0]],tieUp:[[1,0,1,0,1,0],[0,1,1,0,1,0],[0,1,0,1,1,0],[0,1,0,1,0,0],[1,0,0,1,0,1],[1,0,1,0,1,0]],treadling:[[0,0,0,0,0,1],[0,0,0,0,1,0],[0,0,0,1,0,0],[0,0,1,0,0,0],[0,1,0,0,0,0],[1,0,0,0,0,0],[0,0,0,0,1,0],[0,0,0,0,0,1],[0,0,1,0,0,0],[0,0,0,1,0,0],[1,0,0,0,0,0],[0,1,0,0,0,0]],id:"35"},{threading:[[0,0,0,0,0,1,0,0,0,1],[0,0,0,0,0,0,1,0,1,0],[0,0,0,0,0,0,0,1,0,0],[1,0,0,0,1,0,0,0,0,0],[0,1,0,1,0,0,0,0,0,0],[0,0,1,0,0,0,0,0,0,0]],tieUp:[[1,0,0,0,1,1],[1,1,0,0,0,1],[1,1,1,0,0,0],[0,1,1,1,0,0],[0,0,1,1,1,0],[0,0,0,1,1,1]],treadling:[[0,0,0,0,0,1],[0,0,0,0,1,0],[0,0,0,1,0,0],[0,0,0,0,1,0],[0,0,0,0,0,1],[0,0,1,0,0,0],[0,1,0,0,0,0],[1,0,0,0,0,0],[0,1,0,0,0,0],[0,0,1,0,0,0]],id:"36"},{threading:[[0,0,0,0,0,0,0,1],[0,0,0,0,0,0,1,0],[0,1,0,0,0,1,0,0],[1,0,0,0,1,0,0,0],[0,0,0,1,0,0,0,0],[0,0,1,0,0,0,0,0]],tieUp:[[0,1,0,1,0,0],[1,0,1,0,0,0],[0,1,0,0,0,1],[1,0,0,0,1,0],[0,0,0,1,0,1],[0,0,1,0,1,0]],treadling:[[0,0,0,0,0,1],[0,0,0,0,1,0],[0,0,0,1,0,0],[0,0,1,0,0,0],[0,1,0,0,0,0],[1,0,0,0,0,0]],id:"37"},{threading:[[0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1],[1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0],[0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0],[0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0],[0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0]],tieUp:[[0,1,0,1,0,0],[1,0,1,0,0,0],[0,1,0,0,0,1],[1,0,0,0,1,0],[0,0,0,1,0,1],[0,0,1,0,1,0]],treadling:[[0,0,0,0,0,1],[0,0,0,0,1,0],[0,0,0,1,0,0],[0,0,1,0,0,0],[0,1,0,0,0,0],[1,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,1],[0,0,0,0,1,0],[0,0,0,1,0,0],[0,0,1,0,0,0],[0,0,0,1,0,0],[0,0,1,0,0,0],[0,1,0,0,0,0],[1,0,0,0,0,0],[0,1,0,0,0,0],[0,0,1,0,0,0],[0,0,0,1,0,0],[0,0,1,0,0,0],[0,0,0,1,0,0],[0,0,0,0,1,0]],id:"38"},{threading:[[0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,1,0,1,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0],[1,0,0,0,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0],[0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,1],[0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,1,0,1,0],[0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0]],tieUp:[[1,0,0,0,0,1],[0,1,0,0,1,0],[1,0,0,1,0,1],[0,1,1,0,1,0],[0,0,0,1,0,1],[0,0,1,0,1,0]],treadling:[[0,0,0,0,0,1],[0,0,0,0,1,0],[0,0,0,0,0,1],[0,0,0,0,1,0],[0,0,0,1,0,0],[0,0,1,0,0,0],[0,0,0,1,0,0],[0,0,0,0,1,0],[0,0,0,0,0,1],[0,0,0,0,1,0],[0,0,0,0,0,1],[0,1,0,0,0,0],[1,0,0,0,0,0],[0,1,0,0,0,0]],id:"39"},{threading:[[0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,1,0,1,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0],[1,0,0,0,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0],[0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,1],[0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,1,0,1,0],[0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0]],tieUp:[[1,0,1,1,1,1],[0,1,0,1,1,1],[1,0,1,0,1,1],[0,1,0,1,0,1],[0,0,1,0,1,0],[0,0,0,1,0,1]],treadling:[[0,0,0,0,0,1],[0,0,0,0,1,0],[0,0,0,1,0,0],[0,0,1,0,0,0],[0,1,0,0,0,0],[1,0,0,0,0,0],[0,1,0,0,0,0],[0,0,1,0,0,0],[0,0,0,1,0,0],[0,0,0,0,1,0],[0,0,0,0,0,1]],id:"40"},{threading:[[0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0],[0,0,0,1,0,1,0,0,0,1,0,1,0,0,0,0,0,0,0,1,0,1,0,0,0,1,0,1,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0],[1,0,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,1,0,1,0],[0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1]],tieUp:[[1,0,0,0,0,1],[0,1,0,0,1,0],[1,0,1,0,0,0],[0,1,0,1,0,0],[0,1,0,1,1,0],[1,0,1,0,0,1]],treadling:[[1,0,0,0,0,0],[0,1,0,0,0,0],[1,0,0,0,0,0],[0,1,0,0,0,0],[0,0,1,0,0,0],[0,0,0,1,0,0],[0,0,1,0,0,0],[0,0,0,0,1,0],[0,0,0,0,0,1],[0,0,0,0,1,0],[0,0,1,0,0,0],[0,0,0,1,0,0],[0,0,1,0,0,0],[0,1,0,0,0,0],[1,0,0,0,0,0],[0,1,0,0,0,0],[1,0,0,0,0,0],[0,1,0,0,0,0],[1,0,0,0,0,0],[0,1,0,0,0,0],[0,0,1,0,0,0],[0,0,0,1,0,0],[0,0,1,0,0,0],[0,0,0,0,1,0],[0,0,0,0,0,1],[0,0,0,0,1,0],[0,0,1,0,0,0],[0,0,0,1,0,0],[0,0,1,0,0,0],[0,1,0,0,0,0],[1,0,0,0,0,0],[0,1,0,0,0,0]],id:"41"},{threading:[[0,0,0,0,0,1,0,0,0,0,0,1],[0,0,0,0,1,0,0,0,0,0,1,0],[0,0,0,1,0,0,0,0,0,1,0,0],[0,0,1,0,0,0,0,0,1,0,0,0],[0,1,0,0,0,0,0,1,0,0,0,0],[1,0,0,0,0,0,1,0,0,0,0,0]],tieUp:[[1,0,1,0,1,1],[0,1,0,1,1,1],[1,0,1,1,1,0],[0,1,1,1,0,1],[1,1,1,0,1,0],[1,1,0,1,0,1]],treadling:[[0,0,0,0,0,1],[0,0,0,1,0,0],[0,0,0,0,1,0],[0,0,1,0,0,0],[0,0,0,1,0,0],[0,1,0,0,0,0],[0,0,1,0,0,0],[1,0,0,0,0,0]],id:"42"},{threading:[[0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,1,0],[0,1,0,0,0,0,0,0,0,1,0,0],[0,0,1,0,0,0,0,0,1,0,0,0],[0,0,0,1,0,0,0,1,0,0,0,0],[0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,0,1,0,0,0,0,0,0]],tieUp:[[0,1,1,1,0,0,1],[1,1,1,0,0,1,0],[1,1,0,0,1,0,0],[1,0,0,1,0,0,1],[0,0,1,0,0,1,1],[0,1,0,0,1,1,1],[1,0,0,1,1,1,0]],treadling:[[0,0,0,0,0,0,1],[0,0,0,0,0,1,0],[0,0,0,0,1,0,0],[0,0,0,1,0,0,0],[0,0,1,0,0,0,0],[0,1,0,0,0,0,0],[1,0,0,0,0,0,0],[0,1,0,0,0,0,0],[0,0,1,0,0,0,0],[0,0,0,1,0,0,0],[0,0,0,0,1,0,0],[0,0,0,0,0,1,0]],id:"43"},{threading:[[0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,1,0],[0,1,0,0,0,0,0,0,0,1,0,0],[0,0,1,0,0,0,0,0,1,0,0,0],[0,0,0,1,0,0,0,1,0,0,0,0],[0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,0,1,0,0,0,0,0,0]],tieUp:[[0,1,0,0,0,1,0],[1,0,1,0,0,0,1],[1,1,0,1,0,0,0],[1,1,1,0,1,0,0],[1,1,1,1,0,1,0],[0,1,1,1,1,0,1],[1,0,1,1,1,1,0]],treadling:[[0,0,0,0,0,0,1],[0,0,0,0,0,1,0],[0,0,0,0,1,0,0],[0,0,0,1,0,0,0],[0,0,1,0,0,0,0],[0,1,0,0,0,0,0],[1,0,0,0,0,0,0],[0,1,0,0,0,0,0],[0,0,1,0,0,0,0],[0,0,0,1,0,0,0],[0,0,0,0,1,0,0],[0,0,0,0,0,1,0]],id:"44"},{threading:[[0,0,0,0,0,0,0,1],[0,0,0,0,0,0,1,0],[0,0,0,0,0,1,0,0],[0,0,0,0,1,0,0,0],[0,0,0,1,0,0,0,0],[0,0,1,0,0,0,0,0],[0,1,0,0,0,0,0,0],[1,0,0,0,0,0,0,0]],tieUp:[[0,0,1,1],[1,0,1,0],[1,1,0,0],[0,1,0,1],[0,0,1,1],[0,1,1,0],[1,1,0,0],[1,0,0,1]],treadling:[[0,0,0,1],[0,0,1,0],[0,1,0,0],[1,0,0,0],[0,0,1,0],[0,0,0,1],[0,1,0,0],[1,0,0,0]],id:"45"},{threading:[[0,0,0,0,0,0,0,1],[0,0,0,0,0,0,1,0],[0,0,0,0,0,1,0,0],[0,0,0,0,1,0,0,0],[0,0,0,1,0,0,0,0],[0,0,1,0,0,0,0,0],[0,1,0,0,0,0,0,0],[1,0,0,0,0,0,0,0]],tieUp:[[0,0,1,0,1,0,1,1],[0,0,0,1,0,1,1,1],[1,0,0,0,1,1,1,0],[0,1,0,0,1,1,0,1],[1,0,1,1,0,0,1,0],[0,1,1,1,0,0,0,1],[1,1,1,0,1,0,0,0],[1,1,0,1,0,1,0,0]],treadling:[[0,0,0,0,0,0,0,1],[0,0,0,0,0,0,1,0],[0,0,0,0,0,1,0,0],[0,0,0,0,1,0,0,0],[0,0,0,1,0,0,0,0],[0,0,1,0,0,0,0,0],[0,1,0,0,0,0,0,0],[1,0,0,0,0,0,0,0]],id:"46"},{threading:[[0,0,0,0,0,0,0,1],[0,0,0,0,0,0,1,0],[0,0,0,0,0,1,0,0],[0,0,0,0,1,0,0,0],[0,0,0,1,0,0,0,0],[0,0,1,0,0,0,0,0],[0,1,0,0,0,0,0,0],[1,0,0,0,0,0,0,0]],tieUp:[[1,1,1,0,0,0,1,0],[1,1,0,0,0,0,0,1],[1,0,1,0,0,0,1,1],[0,1,1,1,0,1,1,1],[0,0,1,1,1,0,1,0],[0,0,0,1,1,1,0,0],[0,0,1,0,1,1,1,0],[0,1,1,1,0,1,1,1]],treadling:[[0,0,0,0,0,0,0,1],[0,0,0,0,0,0,1,0],[0,0,0,0,0,1,0,0],[0,0,0,0,1,0,0,0],[0,0,0,1,0,0,0,0],[0,0,1,0,0,0,0,0],[0,1,0,0,0,0,0,0],[1,0,0,0,0,0,0,0]],id:"47"},{threading:[[0,0,0,0,0,0,0,1],[0,0,0,0,0,0,1,0],[0,0,0,0,0,1,0,0],[0,0,0,0,1,0,0,0],[0,0,0,1,0,0,0,0],[0,0,1,0,0,0,0,0],[0,1,0,0,0,0,0,0],[1,0,0,0,0,0,0,0]],tieUp:[[0,0,0,1,1,1,0,1],[0,1,1,1,0,1,0,0],[0,1,0,0,0,1,1,1],[1,1,0,1,0,0,0,1],[1,0,1,0,0,0,1,1],[1,1,1,0,1,0,0,0],[1,0,0,0,1,1,1,0],[0,0,1,1,1,0,1,0]],treadling:[[0,0,0,0,0,0,0,1],[0,0,0,0,0,0,1,0],[0,0,0,0,0,1,0,0],[0,0,0,0,1,0,0,0],[0,0,0,1,0,0,0,0],[0,0,1,0,0,0,0,0],[0,1,0,0,0,0,0,0],[1,0,0,0,0,0,0,0]],id:"48"},{threading:[[0,0,0,0,0,0,0,1],[0,0,0,0,0,0,1,0],[0,0,0,0,0,1,0,0],[0,0,0,0,1,0,0,0],[0,0,0,1,0,0,0,0],[0,0,1,0,0,0,0,0],[0,1,0,0,0,0,0,0],[1,0,0,0,0,0,0,0]],tieUp:[[0,0,0,1,1,0,1,1],[0,1,1,0,0,0,1,1],[0,1,1,0,1,1,0,0],[1,0,0,0,1,1,0,1],[1,0,1,1,0,0,0,1],[0,0,1,1,0,1,1,0],[1,1,0,0,0,1,1,0],[1,1,0,1,1,0,0,0]],treadling:[[0,0,0,0,0,0,0,1],[0,0,0,0,0,0,1,0],[0,0,0,0,0,1,0,0],[0,0,0,0,1,0,0,0],[0,0,0,1,0,0,0,0],[0,0,1,0,0,0,0,0],[0,1,0,0,0,0,0,0],[1,0,0,0,0,0,0,0]],id:"49"},{threading:[[0,0,0,0,0,0,0,1],[0,0,0,0,0,0,1,0],[0,0,0,0,0,1,0,0],[0,0,0,0,1,0,0,0],[0,0,0,1,0,0,0,0],[0,0,1,0,0,0,0,0],[0,1,0,0,0,0,0,0],[1,0,0,0,0,0,0,0]],tieUp:[[1,0,0,1,0,0,1,1],[0,1,1,1,0,0,1,0],[1,1,1,0,0,1,0,0],[1,0,0,1,1,1,0,0],[0,0,1,1,1,0,0,1],[0,0,1,0,0,1,1,1],[0,1,0,0,1,1,1,0],[1,1,0,0,1,0,0,1]],treadling:[[0,0,0,0,0,0,0,1],[0,0,0,0,0,0,1,0],[0,0,0,0,0,1,0,0],[0,0,0,0,1,0,0,0],[0,0,0,1,0,0,0,0],[0,0,1,0,0,0,0,0],[0,1,0,0,0,0,0,0],[1,0,0,0,0,0,0,0]],id:"50"},{threading:[[0,0,0,0,0,0,0,1],[0,0,0,0,0,0,1,0],[0,0,0,0,0,1,0,0],[0,0,0,0,1,0,0,0],[0,0,0,1,0,0,0,0],[0,0,1,0,0,0,0,0],[0,1,0,0,0,0,0,0],[1,0,0,0,0,0,0,0]],tieUp:[[1,0,0,0,1,1,1,0],[0,1,0,0,1,1,0,1],[0,0,1,0,1,0,1,1],[0,0,0,1,0,1,1,1],[1,1,1,0,1,0,0,0],[1,1,0,1,0,1,0,0],[1,0,1,1,0,0,1,0],[0,1,1,1,0,0,0,1]],treadling:[[0,0,0,0,0,0,0,1],[0,0,0,0,0,0,1,0],[0,0,0,0,0,1,0,0],[0,0,0,0,1,0,0,0],[0,0,0,1,0,0,0,0],[0,0,1,0,0,0,0,0],[0,1,0,0,0,0,0,0],[1,0,0,0,0,0,0,0]],id:"51"},{threading:[[0,0,0,0,0,0,0,1],[0,0,0,0,0,0,1,0],[0,0,0,0,0,1,0,0],[0,0,0,0,1,0,0,0],[0,0,0,1,0,0,0,0],[0,0,1,0,0,0,0,0],[0,1,0,0,0,0,0,0],[1,0,0,0,0,0,0,0]],tieUp:[[1,0,0,1,0,0,1,1],[1,0,0,0,1,1,0,1],[0,1,0,0,1,1,1,0],[0,0,1,1,0,1,1,0],[0,0,1,1,1,0,0,1],[1,1,0,1,1,0,0,0],[1,1,1,0,0,1,0,0],[0,1,1,0,0,0,1,1]],treadling:[[0,0,0,0,0,0,0,1],[0,0,0,0,0,0,1,0],[0,0,0,0,0,1,0,0],[0,0,0,0,1,0,0,0],[0,0,0,1,0,0,0,0],[0,0,1,0,0,0,0,0],[0,1,0,0,0,0,0,0],[1,0,0,0,0,0,0,0]],id:"52"},{threading:[[0,0,0,0,0,0,0,1,0,0,0,1],[0,0,0,0,0,0,1,0,0,0,1,0],[0,0,0,0,0,0,0,0,0,1,0,0],[0,0,0,0,0,0,0,0,1,0,0,0],[0,1,0,0,0,1,0,0,0,0,0,0],[1,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,1,0,0,0,0,0,0,0,0],[0,0,1,0,0,0,0,0,0,0,0,0]],tieUp:[[0,0,1,1,0,1,0,1],[0,0,1,1,1,0,1,0],[1,1,0,0,0,1,0,1],[1,1,0,0,1,0,1,0],[1,0,1,0,1,1,0,0],[0,1,0,1,1,1,0,0],[1,0,1,0,0,0,1,1],[0,1,0,1,0,0,1,1]],treadling:[[0,0,0,0,0,0,0,1],[0,0,0,0,0,0,1,0],[0,0,0,0,0,1,0,0],[0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,1],[0,0,0,0,0,0,1,0],[0,0,0,1,0,0,0,0],[0,0,1,0,0,0,0,0],[0,1,0,0,0,0,0,0],[1,0,0,0,0,0,0,0],[0,0,0,1,0,0,0,0],[0,0,1,0,0,0,0,0]],id:"53"},{threading:[[0,0,0,0,0,0,0,1,0,0,0,1],[0,0,0,0,0,0,1,0,0,0,1,0],[0,0,0,0,0,0,0,0,0,1,0,0],[0,0,0,0,0,0,0,0,1,0,0,0],[0,1,0,0,0,1,0,0,0,0,0,0],[1,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,1,0,0,0,0,0,0,0,0],[0,0,1,0,0,0,0,0,0,0,0,0]],tieUp:[[0,1,0,0,0,1,1,1],[1,0,0,0,1,0,1,1],[0,0,0,1,1,1,0,1],[0,0,1,0,1,1,1,0],[0,1,1,1,0,1,0,0],[1,0,1,1,1,0,0,0],[1,1,0,1,0,0,0,1],[1,1,1,0,0,0,1,0]],treadling:[[0,0,0,0,0,0,0,1],[0,0,0,0,0,0,1,0],[0,0,0,0,0,1,0,0],[0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,1],[0,0,0,0,0,0,1,0],[0,0,0,1,0,0,0,0],[0,0,1,0,0,0,0,0],[0,1,0,0,0,0,0,0],[1,0,0,0,0,0,0,0],[0,0,0,1,0,0,0,0],[0,0,1,0,0,0,0,0]],id:"54"},{threading:[[0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,1,0],[0,1,0,0,0,0,0,0,0,0,0,1,0,0],[0,0,1,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,1,0,0,0,0,0,1,0,0,0,0],[0,0,0,0,1,0,0,0,1,0,0,0,0,0],[0,0,0,0,0,1,0,1,0,0,0,0,0,0],[0,0,0,0,0,0,1,0,0,0,0,0,0,0]],tieUp:[[1,0,0,1,0,0,1,1],[0,0,1,0,0,1,1,1],[0,1,0,0,1,1,1,0],[1,0,0,1,1,1,0,0],[0,0,1,1,1,0,0,1],[0,1,1,1,0,0,1,0],[1,1,1,0,0,1,0,0],[1,1,0,0,1,0,0,1]],treadling:[[0,0,0,0,0,0,0,1],[0,0,0,0,0,0,1,0],[0,0,0,0,0,1,0,0],[0,0,0,0,1,0,0,0],[0,0,0,1,0,0,0,0],[0,0,1,0,0,0,0,0],[0,1,0,0,0,0,0,0],[1,0,0,0,0,0,0,0],[0,1,0,0,0,0,0,0],[0,0,1,0,0,0,0,0],[0,0,0,1,0,0,0,0],[0,0,0,0,1,0,0,0],[0,0,0,0,0,1,0,0],[0,0,0,0,0,0,1,0]],id:"55"},{threading:[[0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1],[0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0],[0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0],[0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0],[0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0],[0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0],[1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0]],tieUp:[[1,0,0,0],[0,1,0,0],[0,0,1,0],[0,0,0,1],[1,1,1,0],[1,1,0,1],[1,0,1,1],[0,1,1,1]],treadling:[[0,0,0,1],[0,0,1,0],[0,1,0,0],[1,0,0,0]],id:"56"},{threading:[[0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,1,0],[0,1,0,0,0,0,0,0,0,0,0,1,0,0],[0,0,1,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,1,0,0,0,0,0,1,0,0,0,0],[0,0,0,0,1,0,0,0,1,0,0,0,0,0],[0,0,0,0,0,1,0,1,0,0,0,0,0,0],[0,0,0,0,0,0,1,0,0,0,0,0,0,0]],tieUp:[[1,1,1,0,0,0,0,0],[1,1,0,0,0,0,0,1],[1,0,0,0,0,0,1,1],[0,0,0,0,0,1,1,1],[0,0,0,0,1,1,1,0],[0,0,0,1,1,1,0,1],[0,0,1,1,1,0,1,0],[0,1,1,1,0,1,0,0]],treadling:[[0,0,0,0,0,0,0,1],[0,0,0,0,0,0,1,0],[0,0,0,0,0,1,0,0],[0,0,0,0,1,0,0,0],[0,0,0,1,0,0,0,0],[0,0,1,0,0,0,0,0],[0,1,0,0,0,0,0,0],[1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,1],[0,0,0,0,0,0,1,0],[0,0,0,0,0,1,0,0],[0,0,0,0,1,0,0,0],[0,0,0,1,0,0,0,0],[0,0,1,0,0,0,0,0],[0,1,0,0,0,0,0,0],[1,0,0,0,0,0,0,0],[0,1,0,0,0,0,0,0],[0,0,1,0,0,0,0,0],[0,0,0,1,0,0,0,0],[0,0,0,0,1,0,0,0],[0,0,0,0,0,1,0,0],[0,0,0,0,0,0,1,0],[0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0],[0,1,0,0,0,0,0,0],[0,0,1,0,0,0,0,0],[0,0,0,1,0,0,0,0],[0,0,0,0,1,0,0,0],[0,0,0,0,0,1,0,0],[0,0,0,0,0,0,1,0],[0,0,0,0,0,0,0,1]],id:"58"},{threading:[[0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0],[0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0],[0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0],[0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0],[0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0]],tieUp:[[1,0,0,0,0,0,1,1],[0,1,0,0,0,1,1,1],[0,0,1,0,1,1,1,0],[0,0,0,1,1,1,0,0],[0,0,1,1,1,0,0,0],[0,1,1,1,0,1,0,0],[1,1,1,0,0,0,1,0],[1,1,0,0,0,0,0,1]],treadling:[[0,0,0,0,0,0,0,1],[0,0,0,0,0,0,1,0],[0,0,0,0,0,1,0,0],[0,0,0,0,1,0,0,0],[0,0,0,1,0,0,0,0],[0,0,1,0,0,0,0,0],[0,1,0,0,0,0,0,0],[1,0,0,0,0,0,0,0],[0,1,0,0,0,0,0,0],[0,0,1,0,0,0,0,0],[0,0,0,1,0,0,0,0],[0,0,0,0,1,0,0,0],[0,0,0,0,0,1,0,0],[0,0,0,0,0,0,1,0]],id:"59"},{threading:[[0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0],[0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0],[0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0],[0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0],[0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0]],tieUp:[[1,0,0,1,0,1,0,1],[0,1,0,0,0,1,1,1],[0,0,1,0,1,1,1,0],[1,0,0,1,1,0,1,0],[0,1,0,1,1,0,0,1],[0,1,1,1,0,1,0,0],[1,1,1,0,0,0,1,0],[1,0,1,0,1,0,0,1]],treadling:[[0,0,0,0,0,0,0,1],[0,0,0,0,0,0,1,0],[0,0,0,0,0,1,0,0],[0,0,0,0,1,0,0,0],[0,0,0,1,0,0,0,0],[0,0,1,0,0,0,0,0],[0,1,0,0,0,0,0,0],[1,0,0,0,0,0,0,0]],id:"61"},{threading:[[0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0],[0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0],[0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0],[0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0],[0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0]],tieUp:[[0,1,0,1,0,1,0,0],[1,0,1,0,1,0,0,0],[0,1,0,1,0,0,0,1],[1,0,1,0,0,0,1,0],[0,1,0,0,0,1,0,1],[1,0,0,0,1,0,1,0],[0,0,0,1,0,1,0,1],[0,0,1,0,1,0,1,0]],treadling:[[0,0,0,0,0,0,0,1],[0,0,0,0,0,0,1,0],[0,0,0,0,0,1,0,0],[0,0,0,0,1,0,0,0],[0,0,0,0,0,1,0,0],[0,0,0,0,0,0,1,0],[0,0,0,0,0,0,0,1],[0,0,0,0,0,0,1,0],[0,0,0,0,0,1,0,0],[0,0,0,0,1,0,0,0],[0,0,0,0,0,1,0,0],[0,0,0,0,0,0,1,0],[0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0],[0,1,0,0,0,0,0,0],[0,0,1,0,0,0,0,0],[0,0,0,1,0,0,0,0],[0,0,1,0,0,0,0,0],[0,1,0,0,0,0,0,0],[1,0,0,0,0,0,0,0],[0,1,0,0,0,0,0,0],[0,0,1,0,0,0,0,0],[0,0,0,1,0,0,0,0],[0,0,1,0,0,0,0,0],[0,1,0,0,0,0,0,0],[1,0,0,0,0,0,0,0]],id:"61"},{threading:[[0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0],[0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0],[0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0],[0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0],[0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0]],tieUp:[[1,1,0,0,0,0,1,0],[1,0,0,0,0,1,0,1],[0,0,0,0,1,0,1,0],[0,0,0,1,0,1,0,0],[0,0,1,0,1,0,0,0],[0,1,0,1,0,0,0,0],[1,0,1,0,0,0,0,1],[0,1,0,0,0,0,1,1]],treadling:[[0,0,0,0,0,0,0,1],[0,0,0,0,0,0,1,0],[0,0,0,0,0,1,0,0],[0,0,0,0,1,0,0,0],[0,0,0,1,0,0,0,0],[0,0,1,0,0,0,0,0],[0,1,0,0,0,0,0,0],[1,0,0,0,0,0,0,0]],id:"64"},{threading:[[0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1],[0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0],[0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0],[0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0],[0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0],[0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0],[1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0]],tieUp:[[1,1,1,0,1,0,0,0],[1,1,0,1,0,0,1,0],[0,0,1,0,0,1,0,0],[0,0,0,1,0,0,0,1],[1,0,0,0,1,1,1,0],[0,0,1,0,1,1,0,1],[0,1,0,0,0,0,1,0],[0,0,0,1,0,0,0,1]],treadling:[[0,0,0,0,0,0,0,1],[0,0,0,0,0,0,1,0],[0,0,0,0,0,1,0,0],[0,0,0,0,1,0,0,0],[0,0,0,1,0,0,0,0],[0,0,1,0,0,0,0,0],[0,1,0,0,0,0,0,0],[1,0,0,0,0,0,0,0]],id:"66"},{threading:[[0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1],[0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0],[0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0],[0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0],[0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0],[0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0],[1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0]],tieUp:[[1,1,1,0,1,0,0,0],[1,1,0,1,0,0,0,1],[0,0,1,0,1,1,1,0],[0,0,0,1,1,1,0,1],[1,0,0,0,1,0,0,0],[0,0,1,0,0,0,1,0],[0,1,0,0,0,1,0,0],[0,0,0,1,0,0,0,1]],treadling:[[0,0,0,0,0,0,0,1],[0,0,0,0,0,0,1,0],[0,0,0,0,0,1,0,0],[0,0,0,0,1,0,0,0],[0,0,0,1,0,0,0,0],[0,0,1,0,0,0,0,0],[0,1,0,0,0,0,0,0],[1,0,0,0,0,0,0,0]],id:"67"},{threading:[[0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1],[0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0],[0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0],[0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0],[0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0],[0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0],[1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0]],tieUp:[[1,0,1,1,1,0,0,0],[0,1,0,1,1,1,0,0],[0,0,1,0,1,1,1,0],[0,0,0,1,0,1,1,1],[1,0,0,0,1,0,1,1],[1,1,0,0,0,1,0,1],[1,1,1,0,0,0,1,0],[0,1,1,1,0,0,0,1]],treadling:[[0,0,0,0,0,0,0,1],[0,0,0,0,0,0,1,0],[0,0,0,0,0,1,0,0],[0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,1],[0,0,0,0,0,0,1,0],[0,0,0,0,0,1,0,0],[0,0,0,0,1,0,0,0],[0,0,0,1,0,0,0,0],[0,0,1,0,0,0,0,0],[0,1,0,0,0,0,0,0],[1,0,0,0,0,0,0,0],[0,0,0,1,0,0,0,0],[0,0,1,0,0,0,0,0],[0,1,0,0,0,0,0,0],[1,0,0,0,0,0,0,0]],id:"68"},{threading:[[0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1],[0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0],[0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0],[0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0],[0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0],[0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0],[1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0]],tieUp:[[1,0,0,1,1,0,1,0],[0,0,1,0,1,1,1,0],[0,1,0,0,0,1,1,1],[1,0,0,1,0,1,0,1],[1,0,1,0,1,0,0,1],[1,1,1,0,0,0,1,0],[0,1,1,1,0,1,0,0],[0,1,0,1,1,0,0,1]],treadling:[[0,0,0,0,0,0,0,1],[0,0,0,0,0,0,1,0],[0,0,0,0,0,1,0,0],[0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,1],[0,0,0,0,0,0,1,0],[0,0,0,0,0,1,0,0],[0,0,0,0,1,0,0,0],[0,0,0,1,0,0,0,0],[0,0,1,0,0,0,0,0],[0,1,0,0,0,0,0,0],[1,0,0,0,0,0,0,0],[0,0,0,1,0,0,0,0],[0,0,1,0,0,0,0,0],[0,1,0,0,0,0,0,0],[1,0,0,0,0,0,0,0]],id:"70"},{threading:[[0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1],[0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0],[0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0],[0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0],[0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0],[0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0],[1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0]],tieUp:[[0,0,1,1,0,0,1,1],[0,1,1,0,0,0,1,1],[1,1,0,0,1,1,0,0],[1,0,0,1,1,1,0,0],[0,0,1,1,1,0,1,0],[0,0,1,1,0,0,0,1],[1,1,0,0,1,0,0,0],[1,1,0,0,0,1,0,0]],treadling:[[0,0,0,0,0,0,0,1],[0,0,0,0,0,0,1,0],[0,0,0,0,0,1,0,0],[0,0,0,0,1,0,0,0],[0,0,0,1,0,0,0,0],[0,0,1,0,0,0,0,0],[0,1,0,0,0,0,0,0],[1,0,0,0,0,0,0,0]],id:"71"},{threading:[[0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1],[0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0],[0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0],[0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0],[0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0],[0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0],[1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0]],tieUp:[[0,1,0,1,0,1,0,0],[1,0,1,0,1,0,0,0],[0,1,0,1,0,0,0,1],[1,0,1,0,0,0,1,0],[0,1,0,0,0,1,0,1],[1,0,0,0,1,0,1,0],[0,0,0,1,0,1,0,1],[0,0,1,0,1,0,1,0]],treadling:[[1,0,0,0,0,0,0,0],[0,0,1,0,0,0,0,0],[0,1,0,0,0,0,0,0],[0,0,0,1,0,0,0,0],[0,0,0,0,1,0,0,0],[0,0,0,0,0,1,0,0],[0,0,0,0,0,0,1,0],[0,0,0,0,0,0,0,1]],id:"73"},{threading:[[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0],[0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0],[0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0],[1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]],tieUp:[[0,1,1,0,0,0,1,1],[0,1,1,0,1,1,0,0],[1,0,0,1,1,1,0,0],[1,0,1,1,0,0,1,1],[0,0,1,0,0,1,1,0],[1,1,0,0,0,1,1,0],[1,1,0,0,1,0,0,1],[0,0,1,1,1,0,0,1]],treadling:[[0,0,0,0,0,0,1,0],[0,0,0,0,0,0,0,1],[0,0,0,0,0,0,1,0],[0,0,0,0,0,0,0,1],[0,0,0,0,0,0,1,0],[0,0,0,0,1,0,0,0],[0,0,0,0,0,1,0,0],[0,0,0,0,1,0,0,0],[0,0,0,0,0,1,0,0],[0,0,0,0,1,0,0,0],[0,0,1,0,0,0,0,0],[0,0,0,1,0,0,0,0],[0,0,1,0,0,0,0,0],[0,0,0,1,0,0,0,0],[0,0,1,0,0,0,0,0],[1,0,0,0,0,0,0,0],[0,1,0,0,0,0,0,0],[1,0,0,0,0,0,0,0],[0,1,0,0,0,0,0,0],[1,0,0,0,0,0,0,0]],id:"74"},{threading:[[0,0,0,0,0,0,0,0,0,1],[0,0,0,0,0,0,0,0,1,0],[0,0,0,0,0,0,0,1,0,0],[0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,1,0,0,0,0],[0,0,0,0,1,0,0,0,0,0],[0,0,0,1,0,0,0,0,0,0],[0,0,1,0,0,0,0,0,0,0],[0,1,0,0,0,0,0,0,0,0],[1,0,0,0,0,0,0,0,0,0]],tieUp:[[1,1,1,1,1,0,0,1,0,0],[0,0,1,0,0,1,1,1,1,1],[1,0,0,1,1,1,1,1,0,0],[0,1,1,1,1,1,0,0,1,0],[1,1,1,1,0,0,1,0,0,1],[1,1,0,0,1,0,0,1,1,1],[0,0,1,1,1,1,1,0,0,1],[0,1,0,0,1,1,1,1,1,0],[1,0,0,1,0,0,1,1,1,1],[1,1,1,0,0,1,0,0,1,1]],treadling:[[0,0,0,0,0,0,0,0,0,1],[0,0,0,0,0,0,0,0,1,0],[0,0,0,0,0,0,0,1,0,0],[0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,1,0,0,0,0],[0,0,0,0,1,0,0,0,0,0],[0,0,0,1,0,0,0,0,0,0],[0,0,1,0,0,0,0,0,0,0],[0,1,0,0,0,0,0,0,0,0],[1,0,0,0,0,0,0,0,0,0]],id:"75"},{threading:[[0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1],[0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0],[0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0],[0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0],[0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0],[0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0],[1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0]],tieUp:[[1,0,0,0,1,1,1,0],[0,1,0,0,1,1,0,1],[0,0,1,0,1,0,1,1],[0,0,0,1,0,1,1,1],[1,1,1,0,1,0,0,0],[1,1,0,1,0,1,0,0],[1,0,1,1,0,0,1,0],[0,1,1,1,0,0,0,1]],treadling:[[0,0,0,0,0,0,0,1],[0,0,0,0,0,0,1,0],[0,0,0,0,0,1,0,0],[0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,1],[0,0,0,0,0,0,1,0],[0,0,0,0,0,1,0,0],[0,0,0,0,1,0,0,0],[0,0,0,1,0,0,0,0],[0,0,1,0,0,0,0,0],[0,1,0,0,0,0,0,0],[1,0,0,0,0,0,0,0],[0,0,0,1,0,0,0,0],[0,0,1,0,0,0,0,0],[0,1,0,0,0,0,0,0],[1,0,0,0,0,0,0,0]],id:"76"},{threading:[[0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1],[0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0],[0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0],[0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0],[0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0],[0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0],[1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0]],tieUp:[[1,1,1,0,1,0,0,0],[1,0,1,1,0,1,0,0],[0,1,0,0,0,0,1,0],[0,0,0,1,0,0,0,1],[1,0,0,0,1,1,1,0],[0,1,0,0,1,0,1,1],[0,0,1,0,0,1,0,0],[0,0,0,1,0,0,0,1]],treadling:[[0,0,0,0,0,0,0,1],[0,0,0,0,0,0,1,0],[0,0,0,0,0,1,0,0],[0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,1],[0,0,0,0,0,0,1,0],[0,0,0,0,0,1,0,0],[0,0,0,0,1,0,0,0],[0,0,0,1,0,0,0,0],[0,0,1,0,0,0,0,0],[0,1,0,0,0,0,0,0],[1,0,0,0,0,0,0,0],[0,0,0,1,0,0,0,0],[0,0,1,0,0,0,0,0],[0,1,0,0,0,0,0,0],[1,0,0,0,0,0,0,0]],id:"77"},{threading:[[0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1],[0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0],[0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0],[0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0],[0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0],[1,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0]],tieUp:[[1,0,0,1,1,1,0,0],[0,1,0,0,1,1,1,0],[0,0,1,0,0,1,1,1],[1,0,0,1,0,0,1,1],[1,1,0,0,1,0,0,1],[1,1,1,0,0,1,0,0],[0,1,1,1,0,0,1,0],[0,0,1,1,1,0,0,1]],treadling:[[0,0,0,0,0,0,0,1],[0,0,0,0,0,0,1,0],[0,0,0,0,0,1,0,0],[0,0,0,0,1,0,0,0],[0,0,0,1,0,0,0,0],[0,0,1,0,0,0,0,0],[0,1,0,0,0,0,0,0],[1,0,0,0,0,0,0,0],[0,1,0,0,0,0,0,0],[0,0,1,0,0,0,0,0],[0,0,0,1,0,0,0,0],[0,0,0,0,1,0,0,0],[0,0,0,0,0,1,0,0],[0,0,0,0,0,0,1,0],[0,0,0,0,0,0,0,1]],id:"78"},{threading:[[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1],[0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0],[0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0],[0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,0],[0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0],[0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0]],tieUp:[[0,1,1,0,1,0,1,0],[1,0,0,1,0,1,0,1],[0,1,1,0,0,1,0,1],[1,0,0,1,1,0,1,0],[0,1,0,1,0,1,1,0],[1,0,1,0,1,0,0,1],[1,0,1,0,0,1,1,0],[0,1,0,1,1,0,0,1]],treadling:[[1,0,0,0,0,0,0,0],[0,1,0,0,0,0,0,0],[1,0,0,0,0,0,0,0],[0,0,1,0,0,0,0,0],[1,0,0,0,0,0,0,0],[0,0,1,0,0,0,0,0],[0,0,0,1,0,0,0,0],[0,0,1,0,0,0,0,0],[0,0,0,0,1,0,0,0],[0,0,0,0,0,1,0,0],[0,0,0,0,1,0,0,0],[0,0,0,0,0,0,1,0],[0,0,0,0,1,0,0,0],[0,0,0,0,0,0,1,0],[0,0,0,0,0,0,0,1],[0,0,0,0,0,0,1,0]],id:"80"},{threading:[[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,1,0,1,0,1],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,1,0,1,0,1,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0],[0,0,1,0,1,0,1,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,1,0,1,0,1,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]],tieUp:[[0,1,0,1,1,1,0,0],[0,1,0,1,0,0,1,1],[1,0,1,0,1,1,0,0],[1,0,1,0,0,0,1,1],[0,0,1,1,1,0,1,0],[1,1,0,0,1,0,1,0],[0,0,1,1,0,1,0,1],[1,1,0,0,0,1,0,1]],treadling:[[0,0,0,0,0,0,0,1],[0,0,0,0,0,0,1,0],[0,0,0,0,0,0,0,1],[0,0,0,0,0,0,1,0],[0,0,0,0,0,0,0,1],[0,0,0,0,0,0,1,0],[0,0,0,0,0,1,0,0],[0,0,0,0,1,0,0,0],[0,0,0,0,0,1,0,0],[0,0,0,0,1,0,0,0],[0,0,0,0,0,1,0,0],[0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,1],[0,0,0,0,0,0,1,0],[0,0,0,0,0,0,0,1],[0,0,0,0,0,0,1,0],[0,0,0,0,0,0,0,1],[0,0,0,0,0,0,1,0],[0,0,0,0,0,1,0,0],[0,0,0,0,1,0,0,0],[0,0,0,0,0,1,0,0],[0,0,0,0,1,0,0,0],[0,0,0,0,0,1,0,0],[0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,1],[0,0,0,0,0,0,1,0],[0,0,0,0,0,0,0,1],[0,0,0,0,0,0,1,0],[0,0,0,0,0,0,0,1],[0,0,0,0,0,0,1,0],[0,0,0,1,0,0,0,0],[0,0,1,0,0,0,0,0],[0,0,0,1,0,0,0,0],[0,0,1,0,0,0,0,0],[0,0,0,1,0,0,0,0],[0,0,1,0,0,0,0,0],[0,1,0,0,0,0,0,0],[1,0,0,0,0,0,0,0],[0,1,0,0,0,0,0,0],[1,0,0,0,0,0,0,0],[0,1,0,0,0,0,0,0],[1,0,0,0,0,0,0,0],[0,0,0,1,0,0,0,0],[0,0,1,0,0,0,0,0],[0,0,0,1,0,0,0,0],[0,0,1,0,0,0,0,0],[0,0,0,1,0,0,0,0],[0,0,1,0,0,0,0,0],[0,1,0,0,0,0,0,0],[1,0,0,0,0,0,0,0],[0,1,0,0,0,0,0,0],[1,0,0,0,0,0,0,0],[0,1,0,0,0,0,0,0],[1,0,0,0,0,0,0,0],[0,0,0,1,0,0,0,0],[0,0,1,0,0,0,0,0],[0,0,0,1,0,0,0,0],[0,0,1,0,0,0,0,0],[0,0,0,1,0,0,0,0],[0,0,1,0,0,0,0,0]],id:"81"},{threading:[[0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,1],[0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0],[0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0],[0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]],tieUp:[[0,1,0,1,0,1,0,0],[1,0,1,0,1,0,0,0],[0,1,0,1,0,0,0,1],[1,0,1,0,0,0,1,0],[0,1,0,0,0,1,0,1],[1,0,0,0,1,0,1,0],[0,0,0,1,0,1,0,1],[0,0,1,0,1,0,1,0]],treadling:[[0,0,0,0,0,0,0,1],[0,0,0,0,0,0,1,0],[0,0,0,0,0,0,0,1],[0,0,0,0,0,0,1,0],[0,0,0,0,0,1,0,0],[0,0,0,0,1,0,0,0],[0,0,0,0,0,1,0,0],[0,0,0,0,1,0,0,0],[0,0,0,1,0,0,0,0],[0,0,1,0,0,0,0,0],[0,0,0,1,0,0,0,0],[0,0,1,0,0,0,0,0],[0,1,0,0,0,0,0,0],[1,0,0,0,0,0,0,0],[0,1,0,0,0,0,0,0],[1,0,0,0,0,0,0,0],[0,1,0,0,0,0,0,0],[1,0,0,0,0,0,0,0],[0,0,0,1,0,0,0,0],[0,0,1,0,0,0,0,0],[0,0,0,1,0,0,0,0],[0,0,1,0,0,0,0,0]],id:"81"},{threading:[[0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,0,0,1,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,0,1,0,1],[0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,0,0,1,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0],[0,1,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,0,0,1,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0],[1,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0]],tieUp:[[1,1,0,0],[1,0,1,0],[0,1,0,1],[0,0,1,1]],treadling:[[0,0,1,0],[0,0,0,1],[0,1,0,0],[0,0,0,1],[0,0,0,0],[0,0,1,0],[1,0,0,0],[0,1,0,0],[1,0,0,0]],id:"83"},{threading:[[0,0,0,1,0,0,0,1,0,0,0,1],[0,0,1,0,0,0,1,0,0,0,1,0],[0,1,0,0,0,1,0,0,0,1,0,0],[1,0,0,0,1,0,0,0,1,0,0,0]],tieUp:[[1,0,1,0,1,1],[0,1,1,1,1,0],[1,0,1,0,0,0],[0,1,0,0,1,0]],treadling:[[0,0,0,0,0,1],[0,0,0,0,1,0],[0,0,0,1,0,0],[0,0,1,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,1,0,0,0,0],[1,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,1],[0,0,0,0,1,0],[0,0,1,0,0,0],[0,0,0,1,0,0]],id:"84"},{threading:[[0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0],[0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0],[1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0]],tieUp:[[0,0,0,0,1,1],[1,0,0,0,1,0],[0,0,0,1,0,1],[1,0,0,1,0,0],[0,0,1,0,0,1],[1,0,1,0,0,0],[0,1,0,0,0,1],[1,1,0,0,0,0]],treadling:[[1,0,0,0,0,0],[0,1,0,0,0,0],[0,0,0,0,0,1],[0,0,1,0,0,0],[1,0,0,0,0,0],[0,1,0,0,0,0],[0,0,0,0,0,1],[0,0,0,0,1,0],[1,0,0,0,0,0],[0,0,0,1,0,0],[0,0,0,0,0,1],[0,0,1,0,0,0],[1,0,0,0,0,0],[0,1,0,0,0,0],[0,0,0,0,0,1],[0,0,1,0,0,0],[1,0,0,0,0,0],[0,0,0,1,0,0],[0,0,0,0,0,1],[0,0,0,0,1,0],[1,0,0,0,0,0],[0,1,0,0,0,0],[0,0,0,0,0,1],[0,0,1,0,0,0],[1,0,0,0,0,0],[0,1,0,0,0,0],[0,0,0,0,0,1],[0,0,0,0,1,0],[1,0,0,0,0,0],[0,0,0,1,0,0],[0,0,0,0,0,1],[0,0,1,0,0,0],[1,0,0,0,0,0],[0,1,0,0,0,0],[0,0,0,0,0,1],[0,0,1,0,0,0],[1,0,0,0,0,0],[0,0,0,1,0,0],[0,0,0,0,0,1],[0,0,0,0,1,0]],id:"85"},{threading:[[1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0],[0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0],[0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0],[0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0],[0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1]],tieUp:[[1,0,0,1,1,1,0,0],[0,1,0,0,1,1,1,0],[0,0,1,0,0,1,1,1],[1,0,0,1,0,0,1,1],[1,1,0,0,1,0,0,1],[1,1,1,0,0,1,0,0],[0,1,1,1,0,0,1,0],[0,0,1,1,1,0,0,1]],treadling:[[0,0,0,0,0,0,0,1],[0,0,0,0,0,0,1,0],[0,0,0,0,0,1,0,0],[0,0,0,0,1,0,0,0],[0,0,0,1,0,0,0,0],[0,0,1,0,0,0,0,0],[0,1,0,0,0,0,0,0],[1,0,0,0,0,0,0,0],[0,1,0,0,0,0,0,0],[0,0,1,0,0,0,0,0],[0,0,0,1,0,0,0,0],[0,0,0,0,1,0,0,0],[0,0,0,0,0,1,0,0],[0,0,0,0,0,0,1,0]],id:"86"},{threading:[[0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,1,0,0,1,0,0,0,0,0,1,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0],[0,0,0,1,0,0,0,0,0,0,0,1,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0],[0,0,1,0,0,0,0,0,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,1,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0],[1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,1,0,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0]],tieUp:[[1,1,1,0,0,0,1,0],[0,1,1,1,0,0,0,1],[1,0,1,1,1,0,0,0],[0,1,0,1,1,1,0,0],[0,0,1,0,1,1,1,0],[0,0,0,1,0,1,1,1],[1,0,0,0,1,0,1,1],[1,1,0,0,0,1,0,1]],treadling:[[0,0,0,0,0,0,0,1],[0,0,0,0,0,0,1,0],[0,0,0,0,0,1,0,0],[0,0,0,0,1,0,0,0],[0,0,0,1,0,0,0,0],[0,0,1,0,0,0,0,0],[0,1,0,0,0,0,0,0],[1,0,0,0,0,0,0,0],[0,1,0,0,0,0,0,0],[0,0,1,0,0,0,0,0],[0,0,0,1,0,0,0,0],[0,0,0,0,1,0,0,0],[0,0,0,0,0,1,0,0],[0,0,0,0,0,0,1,0]],id:"87"},{threading:[[0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,1,0,1,0,0,0,0,0,0],[0,0,0,0,0,1,0,0,0,1,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,1,0,0,0,0],[0,0,0,1,0,0,0,0,0,0,0,1,0,0,0],[0,0,1,0,0,0,0,0,0,0,0,0,1,0,0],[0,1,0,0,0,0,0,0,0,0,0,0,0,1,0],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,1]],tieUp:[[0,0,0,0,0,0,1,0],[0,0,0,0,0,1,0,1],[0,0,0,0,1,0,1,1],[0,0,0,1,0,1,1,1],[0,0,1,0,1,1,1,1],[0,1,0,1,1,1,1,1],[1,0,1,1,1,1,1,1],[0,1,1,1,1,1,1,1]],treadling:[[1,0,0,0,0,0,0,0],[0,1,0,0,0,0,0,0],[0,0,1,0,0,0,0,0],[0,0,0,1,0,0,0,0],[0,0,0,0,1,0,0,0],[0,0,0,0,0,1,0,0],[0,0,0,0,0,0,1,0],[0,0,0,0,0,0,0,1],[0,0,0,0,0,0,1,0],[0,0,0,0,0,1,0,0],[0,0,0,0,1,0,0,0],[0,0,0,1,0,0,0,0],[0,0,1,0,0,0,0,0],[0,1,0,0,0,0,0,0],[1,0,0,0,0,0,0,0]],name:"Big waffle",id:"waffle-1"},{threading:[[0,1,0,0,0],[1,0,1,0,0],[0,0,0,1,0],[0,0,0,0,1]],tieUp:[[0,0,1,0],[0,1,0,1],[1,0,1,1],[0,1,1,1]],treadling:[[0,0,0,1],[0,0,1,0],[0,1,0,0],[1,0,0,0],[0,1,0,0],[0,0,1,0]],name:"Small waffle",id:"waffle-2"}];function Wi(e){const{draft:t,yarnPalette:i}=x;if(i.length==1){alert("you need some color in your life");return}const n=i.filter((a,h)=>h!=e),r=t.warpColorSequence.map(a=>a==e?0:a>e?a-1:a),s=t.weftColorSequence.map(a=>a==e?0:a>e?a-1:a);t.weftColorSequence=s,t.warpColorSequence=r,x.yarnPalette=n,x.refreshSim=!0,H()}function Yi(e,t){x.yarnPalette[t]=e.target.value,x.refreshSim=!0,H()}function Hi(){x.yarnPalette.push(he())}function Gi(){x.yarnPalette=[...Pi(x.yarnPalette)],x.refreshSim=!0,H()}function Xi(){x.yarnPalette=Array.from(Array(x.yarnPalette.length),()=>he()),x.refreshSim=!0,H()}function ji(){return d0`<div id="yarn-picker">
    <label>Yarns</label>
    <div>
      <button
        class="btn icon ${x.editingPalette?"selected":""}"
        @click=${()=>{x.editingPalette=!x.editingPalette}}>
        <i class="fa-solid fa-pen"></i>
      </button>
      <button class="btn icon" @click=${()=>Hi()}>
        <i class="fa-solid fa-plus"></i>
      </button>
    </div>
    ${x.yarnPalette.map((e,t)=>d0`<button
          class="btn solid color-select ${t==x.activeYarn?"selected":""}"
          @click=${()=>te({activeYarn:t})}>
          <div class="color-label">${t+1}</div>
          <div class="color-preview" style="--current: ${e};">
            ${x.editingPalette?d0`
                  <button
                    class="delete-color-button"
                    @click=${()=>Wi(t)}>
                    <i class="fa-solid fa-circle-xmark"></i>
                  </button>
                  <input
                    class="color-input"
                    type="color"
                    value="${e}"
                    @change=${i=>Yi(i,t)} />
                  <div class="edit-color-icon">
                    <i class="fa-solid fa-pen"></i>
                  </div>
                `:""}
          </div>
        </button>`)}

    <div>
      <button class="btn icon" @click=${()=>Gi()}>
        <i class="fa-solid fa-arrows-rotate"></i>
      </button>
      <button class="btn icon" @click=${()=>Xi()}>
        <i class="fa-solid fa-dice"></i>
      </button>
    </div>
  </div>`}function Zi(){return d0`<div class="toolbar"><span>weavescape</span></div>
    <div class="page-content">
      <div id="drafting-pane">
        <div class="draft-controls">
          <div>
            <label for="select-preset-pattern"> Preset </label>
            <select
              id="select-preset-pattern"
              @change=${e=>nn(Yt[e.target.value])}>
              ${Yt.map((e,t)=>d0`<option value=${t}>${e.name||t+1}</option>`)}
            </select>

            <label for="input-number-harnesses"> Harnesses </label>
            <input
              id="input-number-harnesses"
              type="number"
              .value=${String(x.draft.threading.length)}
              @change=${e=>sn(e.target.value)} />
            <label for="input-number-warp-threads"> Warp </label>
            <input
              id="input-number-warp-threads"
              type="number"
              .value=${String(x.draft.threading[0].length)}
              @change=${e=>an(e.target.value)} />
            <label for="input-number-weft-threads"> Weft </label>
            <input
              id="input-number-weft-threads"
              type="number"
              .value=${String(x.draft.treadling.length)}
              @change=${e=>Ht(e.target.value)} />
            <label> Yarn Diameter </label>
            <input
              id="input-yarn-diameter"
              type="range"
              min="0.1"
              max="1.3"
              step="0.01"
              value="1"
              @change=${()=>ce(document.getElementById("sim-canvas"),x.draft)} />
          </div>
          ${ji()}
          <div class="zoom-container">
            <button class="btn icon" @click=${()=>Qi()}>
              <i class="fa-solid fa-magnifying-glass-minus"></i>
            </button>
            <button class="btn icon" @click=${()=>Ki()}>
              <i class="fa-solid fa-magnifying-glass-plus"></i>
            </button>
          </div>
        </div>
        <div class="draft-layout">
          <div id="warp-color-container" class="scroller">
            <div class="spacer"></div>
            <canvas id="warp-color" @click=${e=>Ji(e)}></canvas>
          </div>
          <div></div>
          <div></div>
          <div id="threading-container" class="scroller">
            <div class="spacer"></div>
            <canvas
              id="threading"
              @click=${rn}
              @mousemove=${e=>ht(e,"threading")}
              @mouseleave=${nt}></canvas>
          </div>
          <div id="tie-up-container">
            <div class="draft-numbers draft-numbers--harnesses" style="font-size: ${x.cellSize*.6}px;">
              ${x.draft.threading.map((e,t)=>d0`<div>${x.draft.threading.length-t}</div>`)}
            </div>
            <div class="draft-numbers draft-numbers--treadles" style="font-size: ${x.cellSize*.6}px;">
              ${x.draft.treadling[0].map((e,t)=>d0`<div>${t+1}</div>`)}
            </div>
            <canvas
              id="tie-up"
              @click=${hn}
              @mousemove=${e=>ht(e,"tie-up")}
              @mouseleave=${nt}></canvas>
          </div>
          <div></div>
          <div id="drawdown-container" class="scroller">
            <div class="spacer"></div>
            <div id="drawdown-repeat-container">
              <canvas id="drawdown-repeat"></canvas>
            </div>
            <canvas id="drawdown"></canvas>
            <canvas id="drawdown-overlay"></canvas>
          </div>
          <div id="treadling-container" class="scroller">
            <div>
              <canvas
                id="treadling"
                @click=${ln}
                @mousemove=${e=>fe(e,"treadling")}
                @mouseleave=${nt}></canvas>
              <button class="btn btn--increase" @click=${()=>Ht(x.draft.treadling.length+1)}>
                <i class="fa-solid fa-plus"></i>
              </button>
            </div>
          </div>
          <div id="weft-color-container" class="scroller">
            <canvas id="weft-color" @click=${e=>tn(e)}></canvas>
          </div>
        </div>
      </div>
      <div id="sim-pane">
        <canvas id="sim-canvas"></canvas>
      </div>
    </div>`}function Qi(){x.cellSize=x.cellSize-1,x.refreshSim=!0,H()}function Ki(){x.cellSize=x.cellSize+1,x.refreshSim=!0,H()}function Ji(e){const{row:t,col:i}=p0(e),{draft:n,activeYarn:r}=x;n.warpColorSequence[i]=r,Q(),H()}function tn(e){const{row:t,col:i}=p0(e),{draft:n,activeYarn:r}=x;n.weftColorSequence[t]=r,Q(),H()}function de(e,t){const i=[];return e.tieUp.forEach(n=>{i.push(n[t])}),i}function en(e){const t=[];return e.treadling.forEach((i,n)=>{let r=new Array(e.threading[0].length).fill(0);i.forEach((s,a)=>{s===1&&de(e,a).forEach((h,l)=>{h===1&&e.threading[l].forEach((c,o)=>{c===1&&(r[o]=1)})})}),t.push(r)}),t}function p0(e){const t=e.currentTarget.getBoundingClientRect(),{cellSize:i}=x;let n=Math.floor((e.clientX-t.x)/i),r=Math.floor((e.clientY-t.y)/i);return n=n<0?0:n,r=r<0?0:r,{row:r,col:n}}function nn(e){let{warpColorSequence:t,weftColorSequence:i}=x.draft;for(;t.length>e.threading[0].length;)t.shift(t[0]);for(;t.length<e.threading[0].length;)t.unshift(t[0]);for(;i.length>e.treadling.length;)i.pop();for(;i.length<e.treadling.length;)i.push(i[i.length-1]);e.warpColorSequence=t,e.weftColorSequence=i,x.draft=e,Q(),H()}function rn(e){const{row:t,col:i}=p0(e),{cellSize:n,draft:r}=x;r.threading[t][i]==0?r.threading[t][i]=1:r.threading[t][i]=0,Q(),Y0()}function sn(e){const{draft:t}=x;if(e<t.threading.length)t.threading=t.threading.slice(0,e),t.tieUp=t.tieUp.slice(0,e),t.tieUp=t.tieUp.map(i=>i.splice(1,e)),t.treadling=t.treadling.map(i=>i.splice(1,e));else{const i=e-t.threading.length;for(let n=0;n<i;n+=1)t.threading.push(new Array(t.threading[0].length).fill(0)),t.tieUp.forEach(r=>r.unshift(0)),t.tieUp.push(new Array(t.tieUp[0].length).fill(0)),t.treadling.forEach(r=>r.unshift(0))}Q(),H()}function Ht(e){const{draft:t}=x;if(e<t.treadling.length)t.treadling=t.treadling.slice(0,e),t.weftColorSequence=t.weftColorSequence.slice(0,e);else{const i=e-t.treadling.length;for(let n=0;n<i;n+=1)t.treadling.push(new Array(t.treadling[0].length).fill(0)),t.weftColorSequence.push(t.weftColorSequence[0])}Q(),H()}function an(e){const{draft:t}=x;if(e<t.threading[0].length)t.threading=t.threading.map(i=>i.splice(1,e)),t.warpColorSequence=t.warpColorSequence.splice(1,e);else{const i=e-t.threading[0].length;for(let n=0;n<i;n+=1)t.threading.forEach(r=>r.unshift(0)),t.warpColorSequence.unshift(t.warpColorSequence[0])}Q(),H()}function ln(e){const{row:t,col:i}=p0(e),{cellSize:n,draft:r}=x;r.treadling[t][i]==0?r.treadling[t][i]=1:r.treadling[t][i]=0,Q(),H0(),fe(e,"treadling")}function hn(e){const{row:t,col:i}=p0(e),{cellSize:n,draft:r}=x;r.tieUp[t][i]==0?r.tieUp[t][i]=1:r.tieUp[t][i]=0,Q(),G0()}function fe(e,t){const{row:i,col:n}=p0(e),{cellSize:r,draft:s}=x,h=document.getElementById("tie-up").getContext("2d"),c=document.getElementById("threading").getContext("2d"),d=document.getElementById("treadling").getContext("2d"),f=document.getElementById("drawdown-overlay").getContext("2d");ht(e,t),dt(),h.lineWidth=2,h.strokeStyle="hsla(317, 82%, 74%, 0.8)",h.fillStyle="rgba(50,50,50,0.7)",c.lineWidth=2,c.strokeStyle="hsla(317, 82%, 74%, 0.8)",c.fillStyle="rgba(50,50,50,0.7)",d.lineWidth=2,d.strokeStyle="hsla(317, 82%, 74%, 0.8)",d.fillStyle="rgba(50,50,50,0.7)",f.lineWidth=2,f.strokeStyle="hsla(317, 82%, 74%, 0.8)",f.fillStyle="rgba(0,0,0,0.4)";const g=s.treadling[i];let p=new Array(s.threading.length).fill(0),m=[];g.forEach((C,A)=>{const _=de(s,A);C===1?(m.push(A),h.strokeRect(A*r,0,r,_.length*r),_.forEach((E,b)=>{E===1&&(p[b]=1)})):h.fillRect(A*r,0,r,_.length*r)});let w=[];p.forEach((C,A)=>{C===1?(w.push(A),c.strokeRect(0,A*r,s.threading[0].length*r,r)):c.fillRect(0,A*r,s.threading[0].length*r,r)}),document.querySelectorAll(".draft-numbers--harnesses div").forEach((C,A)=>{C.style.opacity=w.includes(A)?1:.1}),document.querySelectorAll(".draft-numbers--treadles div").forEach((C,A)=>{C.style.opacity=m.includes(A)?1:.1}),s.treadling.forEach((C,A)=>{A===i?(d.strokeRect(0,A*r,s.treadling[0].length*r,r),f.strokeRect(0,A*r,s.threading[0].length*r,r)):(d.fillRect(0,A*r,s.treadling[0].length*r,r),f.fillRect(0,A*r,s.threading[0].length*r,r))})}function nt(){G0(),Y0(),H0(),dt(),document.querySelectorAll(".draft-numbers div").forEach(e=>{e.style.opacity=1})}function ht(e,t){const{row:i,col:n}=p0(e),{cellSize:r}=x,a=document.getElementById(t).getContext("2d");G0(),Y0(),H0(),a.fillStyle="hsla(317, 82%, 74%, 0.448)",a.fillRect(n*r,i*r,r,r)}function Q(){const{draft:e,cellSize:t}=x;e.drawdown=en(e);const i=document.getElementById("drawdown");ee(i,e,t),x.refreshSim=!0}function ue(){be(Zi(),document.body),window.requestAnimationFrame(ue),x.refreshSim&&window.setTimeout(()=>{ce(document.getElementById("sim-canvas"),x.draft),x.refreshSim=!1})}function on(){const e=document.getElementById("drawdown-container"),t=document.getElementById("treadling-container"),i=document.getElementById("threading-container"),n=document.getElementById("warp-color-container"),r=document.getElementById("weft-color-container");let s=!1,a=!1,h=!1,l=!1,c=!1;e.onscroll=function(){h||(s=!0,a=!0,l=!0,c=!0,t.scrollTop=this.scrollTop,i.scrollLeft=this.scrollLeft,n.scrollLeft=this.scrollLeft,r.scrollTop=this.scrollTop),h=!1},i.onscroll=function(){a||(h=!0,l=!0,e.scrollLeft=this.scrollLeft,n.scrollLeft=this.scrollLeft),a=!1},n.onscroll=function(){l||(a=!0,h=!0,e.scrollLeft=this.scrollLeft,i.scrollLeft=this.scrollLeft),l=!1},r.onscroll=function(){c||(s=!0,h=!0,e.scrollTop=this.scrollTop,t.scrollTop=this.scrollTop),c=!1},t.onscroll=function(){s||(s=!0,h=!0,e.scrollTop=this.scrollTop,r.scrollTop=this.scrollTop),s=!1}}function cn(){ue(),Ce(["#drafting-pane","#sim-pane"],{sizes:[50,50],minSize:100,gutterSize:8,onDrag:()=>{Q()}}),window.addEventListener("resize",()=>{Q()}),Q(),H(),on()}window.onload=cn;
